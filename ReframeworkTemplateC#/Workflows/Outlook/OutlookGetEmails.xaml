<Activity mc:Ignorable="sap sap2010" x:Class="OutlookGetEmails" this:OutlookGetEmails.intSMTP_1_Exchange_2_Outlook_3="2" this:OutlookGetEmails.strEmailFolderFrom="inbox" this:OutlookGetEmails.intGetEmailsTop="50" this:OutlookGetEmails.boolGetEmailsUnread="False" this:OutlookGetEmails.boolGetEmailsMarkRead="False" this:OutlookGetEmails.strEmailCredName_12="Robot1_OutlookCredentials" this:OutlookGetEmails.strEmailCredFolder_12="Default" this:OutlookGetEmails.intEmailPort_1="587" this:OutlookGetEmails.strEmailDomain_2="domain_name" this:OutlookGetEmails.strEmailServer_12="https://outlook.domain_name.pl/EWS/Exchange.asmx" this:OutlookGetEmails.strEmailAccount_13="piotr.gajewskirpa@gmail.com" this:OutlookGetEmails.intGetCredTOms="8000" this:OutlookGetEmails.intGetMailsTOms="16000" this:OutlookGetEmails.intGetMailsRSNR="2" this:OutlookGetEmails.tsGetMailsRSTS="00:00:06" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System.Net.Mail" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="intSMTP_1_Exchange_2_Outlook_3" Type="InArgument(x:Int32)" />
    <x:Property Name="strEmailFolderFrom" Type="InArgument(x:String)" />
    <x:Property Name="intGetEmailsTop" Type="InArgument(x:Int32)" />
    <x:Property Name="arrEmailsIDToGet" Type="InArgument(s:String[])" />
    <x:Property sap2010:Annotation.AnnotationText="Example filter:&#xA;&quot;Subject: &quot; + &quot;Temat wiadomosci&quot; + &quot; AND From: &quot; + &quot;noreply@test.pl&quot; + &quot; AND Received: &gt;= 6/13/2024&quot;" Name="strEmailsFilterToGet" Type="InArgument(x:String)" />
    <x:Property Name="boolGetEmailsUnread" Type="InArgument(x:Boolean)" />
    <x:Property Name="boolGetEmailsMarkRead" Type="InArgument(x:Boolean)" />
    <x:Property Name="strEmailCredName_12" Type="InArgument(x:String)" />
    <x:Property Name="strEmailCredFolder_12" Type="InArgument(x:String)" />
    <x:Property Name="intEmailPort_1" Type="InArgument(x:Int32)" />
    <x:Property Name="strEmailDomain_2" Type="InArgument(x:String)" />
    <x:Property Name="strEmailServer_12" Type="InArgument(x:String)" />
    <x:Property Name="strEmailAccount_13" Type="InArgument(x:String)" />
    <x:Property Name="intGetCredTOms" Type="InArgument(x:Int32)" />
    <x:Property Name="intGetMailsTOms" Type="InArgument(x:Int32)" />
    <x:Property Name="intGetMailsRSNR" Type="InArgument(x:Int32)" />
    <x:Property Name="tsGetMailsRSTS" Type="InArgument(x:TimeSpan)" />
    <x:Property Name="listEmailsFound" Type="OutArgument(scg:List(snm:MailMessage))" />
  </x:Members>
  <this:OutlookGetEmails.arrEmailsIDToGet>
    <InArgument x:TypeArguments="s:String[]">
      <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_87">null</CSharpValue>
    </InArgument>
  </this:OutlookGetEmails.arrEmailsIDToGet>
  <this:OutlookGetEmails.strEmailsFilterToGet>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:OutlookGetEmails.strEmailsFilterToGet>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>674.4,900.8</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>Microsoft.Exchange.WebServices.Data</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Exchange</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Mail.IMAP.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>Microsoft.Exchange.WebServices</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Get E-mails list from given Outlook folder.&#xA;smtp.office365.com" DisplayName="OutlookGetEmails" sap:VirtualizedContainerService.HintSize="716.4000000000001,770.4" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strLogin" />
      <Variable x:TypeArguments="ss:SecureString" Name="sstrPass" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message - 90" sap:VirtualizedContainerService.HintSize="416,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">"Start - Outlook Get Emails"</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
    <If sap2010:Annotation.AnnotationText="Read E-mail credentials?" DisplayName="If - strEmailCredName_12 != &quot;&quot;" sap:VirtualizedContainerService.HintSize="416,88" sap2010:WorkflowViewState.IdRef="If_9">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_88">strEmailCredName_12 != ""</CSharpValue>
        </InArgument>
      </If.Condition>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:GetRobotCredential CacheStrategy="None" DisplayName="Get Credential - strEmailCredName_12" sap:VirtualizedContainerService.HintSize="416,143.2" sap2010:WorkflowViewState.IdRef="GetRobotCredential_2">
          <ui:GetRobotCredential.AssetName>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_89">strEmailCredName_12</CSharpValue>
            </InArgument>
          </ui:GetRobotCredential.AssetName>
          <ui:GetRobotCredential.FolderPath>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_91">strEmailCredFolder_12</CSharpValue>
            </InArgument>
          </ui:GetRobotCredential.FolderPath>
          <ui:GetRobotCredential.Password>
            <OutArgument x:TypeArguments="ss:SecureString">
              <CSharpReference x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpReference`1_13">sstrPass</CSharpReference>
            </OutArgument>
          </ui:GetRobotCredential.Password>
          <ui:GetRobotCredential.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32">
              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_90">intGetCredTOms</CSharpValue>
            </InArgument>
          </ui:GetRobotCredential.TimeoutMS>
          <ui:GetRobotCredential.Username>
            <OutArgument x:TypeArguments="x:String">
              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">strLogin</CSharpReference>
            </OutArgument>
          </ui:GetRobotCredential.Username>
        </ui:GetRobotCredential>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_19">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <ui:RetryScope sap2010:Annotation.AnnotationText="Try to get E-mails from given folder." DisplayName="Retry Scope - Switch - intSMTP_1_Exchange_2_Outlook_3" sap:VirtualizedContainerService.HintSize="416,100.8" sap2010:WorkflowViewState.IdRef="RetryScope_1">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <Switch x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Choose which method to use." DisplayName="Switch - intSMTP_1_Exchange_2_Outlook_3" sap:VirtualizedContainerService.HintSize="356,68.8" sap2010:WorkflowViewState.IdRef="Switch`1_1">
            <Switch.Default>
              <Throw DisplayName="Throw - Invalid Option" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="Throw_1">
                <InArgument x:TypeArguments="s:Exception">
                  <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_357">new BusinessRuleException("Invalid option selected. Please choose between: 1, 2 or 3."){Data = {{"ExType", "BE"}}}</CSharpValue>
                </InArgument>
              </Throw>
            </Switch.Default>
            <Switch.Expression>
              <InArgument x:TypeArguments="x:Int32">
                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_93">intSMTP_1_Exchange_2_Outlook_3</CSharpValue>
              </InArgument>
            </Switch.Expression>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If x:Key="1" sap2010:Annotation.AnnotationText="Get only Unread E-mails?" DisplayName="If - boolGetEmailsUnread - No ID - SMTP" sap:VirtualizedContainerService.HintSize="334.4,56" sap2010:WorkflowViewState.IdRef="If_10">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_95">boolGetEmailsUnread</CSharpValue>
                </InArgument>
              </If.Condition>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,139.2" sap2010:WorkflowViewState.IdRef="Sequence_23">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If sap2010:Annotation.AnnotationText="Mark E-mails as read?" DisplayName="If - boolGetEmailsMarkRead - Unread - No ID - SMTP" sap:VirtualizedContainerService.HintSize="382.4,79.2" sap2010:WorkflowViewState.IdRef="If_11">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_96">boolGetEmailsMarkRead</CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_21">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:GetIMAPMailMessages ClientName="{x:Null}" ClientVersion="{x:Null}" Password="{x:Null}" UseOAuth="{x:Null}" DeleteMessages="False" DisplayName="Get IMAP Mail Messages - listEmailsFound - TT - No ID" EnableSSL="True" FilterExpressionCharacterSet="US-ASCII" sap:VirtualizedContainerService.HintSize="382.4,48" sap2010:WorkflowViewState.IdRef="GetIMAPMailMessages_2" IgnoreCRL="False" MarkAsRead="True" OnlyUnreadMessages="True" OrderByDate="OldestFirst" SecureConnection="Auto">
                          <ui:GetIMAPMailMessages.Email>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_130">strEmailAccount_13</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.Email>
                          <ui:GetIMAPMailMessages.FilterExpression>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_135">strEmailsFilterToGet</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.FilterExpression>
                          <ui:GetIMAPMailMessages.MailFolder>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_134">strEmailFolderFrom</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.MailFolder>
                          <ui:GetIMAPMailMessages.Messages>
                            <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">
                              <CSharpReference x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">listEmailsFound</CSharpReference>
                            </OutArgument>
                          </ui:GetIMAPMailMessages.Messages>
                          <ui:GetIMAPMailMessages.Port>
                            <InArgument x:TypeArguments="x:Int32">
                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_133">intEmailPort_1</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.Port>
                          <ui:GetIMAPMailMessages.SecurePassword>
                            <InArgument x:TypeArguments="ss:SecureString">
                              <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_131">sstrPass</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.SecurePassword>
                          <ui:GetIMAPMailMessages.Server>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_132">strEmailServer_12</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.Server>
                          <ui:GetIMAPMailMessages.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32">
                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_136">intGetMailsTOms</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.TimeoutMS>
                          <ui:GetIMAPMailMessages.Top>
                            <InArgument x:TypeArguments="x:Int32">
                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_137">intGetEmailsTop</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.Top>
                        </ui:GetIMAPMailMessages>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_22">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:GetIMAPMailMessages ClientName="{x:Null}" ClientVersion="{x:Null}" Password="{x:Null}" UseOAuth="{x:Null}" DeleteMessages="False" DisplayName="Get IMAP Mail Messages - listEmailsFound - TF - No ID" EnableSSL="True" FilterExpressionCharacterSet="US-ASCII" sap:VirtualizedContainerService.HintSize="382.4,48" sap2010:WorkflowViewState.IdRef="GetIMAPMailMessages_3" IgnoreCRL="False" MarkAsRead="False" OnlyUnreadMessages="True" OrderByDate="OldestFirst" SecureConnection="Auto">
                          <ui:GetIMAPMailMessages.Email>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_138">strEmailAccount_13</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.Email>
                          <ui:GetIMAPMailMessages.FilterExpression>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_143">strEmailsFilterToGet</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.FilterExpression>
                          <ui:GetIMAPMailMessages.MailFolder>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_142">strEmailFolderFrom</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.MailFolder>
                          <ui:GetIMAPMailMessages.Messages>
                            <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">
                              <CSharpReference x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">listEmailsFound</CSharpReference>
                            </OutArgument>
                          </ui:GetIMAPMailMessages.Messages>
                          <ui:GetIMAPMailMessages.Port>
                            <InArgument x:TypeArguments="x:Int32">
                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_141">intEmailPort_1</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.Port>
                          <ui:GetIMAPMailMessages.SecurePassword>
                            <InArgument x:TypeArguments="ss:SecureString">
                              <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_139">sstrPass</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.SecurePassword>
                          <ui:GetIMAPMailMessages.Server>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_140">strEmailServer_12</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.Server>
                          <ui:GetIMAPMailMessages.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32">
                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_144">intGetMailsTOms</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.TimeoutMS>
                          <ui:GetIMAPMailMessages.Top>
                            <InArgument x:TypeArguments="x:Int32">
                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_145">intGetEmailsTop</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.Top>
                        </ui:GetIMAPMailMessages>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,24.8" sap2010:WorkflowViewState.IdRef="Sequence_26">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If sap2010:Annotation.AnnotationText="Mark E-mails as read?" DisplayName="If - boolGetEmailsMarkRead - All - No ID - SMTP" sap:VirtualizedContainerService.HintSize="353.6,79.2" sap2010:WorkflowViewState.IdRef="If_12">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_113">boolGetEmailsMarkRead</CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,136.8" sap2010:WorkflowViewState.IdRef="Sequence_24">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:GetIMAPMailMessages ClientName="{x:Null}" ClientVersion="{x:Null}" Password="{x:Null}" UseOAuth="{x:Null}" DeleteMessages="False" DisplayName="Get IMAP Mail Messages - listEmailsFound - FT - No ID" EnableSSL="True" FilterExpressionCharacterSet="US-ASCII" sap:VirtualizedContainerService.HintSize="353.6,48" sap2010:WorkflowViewState.IdRef="GetIMAPMailMessages_4" IgnoreCRL="False" MarkAsRead="True" OnlyUnreadMessages="False" OrderByDate="OldestFirst" SecureConnection="Auto">
                          <ui:GetIMAPMailMessages.Email>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_146">strEmailAccount_13</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.Email>
                          <ui:GetIMAPMailMessages.FilterExpression>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_151">strEmailsFilterToGet</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.FilterExpression>
                          <ui:GetIMAPMailMessages.MailFolder>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_150">strEmailFolderFrom</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.MailFolder>
                          <ui:GetIMAPMailMessages.Messages>
                            <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">
                              <CSharpReference x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_20">listEmailsFound</CSharpReference>
                            </OutArgument>
                          </ui:GetIMAPMailMessages.Messages>
                          <ui:GetIMAPMailMessages.Port>
                            <InArgument x:TypeArguments="x:Int32">
                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_149">intEmailPort_1</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.Port>
                          <ui:GetIMAPMailMessages.SecurePassword>
                            <InArgument x:TypeArguments="ss:SecureString">
                              <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_147">sstrPass</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.SecurePassword>
                          <ui:GetIMAPMailMessages.Server>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_148">strEmailServer_12</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.Server>
                          <ui:GetIMAPMailMessages.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32">
                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_152">intGetMailsTOms</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.TimeoutMS>
                          <ui:GetIMAPMailMessages.Top>
                            <InArgument x:TypeArguments="x:Int32">
                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_153">intGetEmailsTop</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.Top>
                        </ui:GetIMAPMailMessages>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,136.8" sap2010:WorkflowViewState.IdRef="Sequence_25">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:GetIMAPMailMessages ClientName="{x:Null}" ClientVersion="{x:Null}" Password="{x:Null}" UseOAuth="{x:Null}" DeleteMessages="False" DisplayName="Get IMAP Mail Messages - listEmailsFound - FF - No ID" EnableSSL="True" FilterExpressionCharacterSet="US-ASCII" sap:VirtualizedContainerService.HintSize="353.6,48" sap2010:WorkflowViewState.IdRef="GetIMAPMailMessages_5" IgnoreCRL="False" MarkAsRead="False" OnlyUnreadMessages="False" OrderByDate="OldestFirst" SecureConnection="Auto">
                          <ui:GetIMAPMailMessages.Email>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_154">strEmailAccount_13</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.Email>
                          <ui:GetIMAPMailMessages.FilterExpression>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_159">strEmailsFilterToGet</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.FilterExpression>
                          <ui:GetIMAPMailMessages.MailFolder>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_158">strEmailFolderFrom</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.MailFolder>
                          <ui:GetIMAPMailMessages.Messages>
                            <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">
                              <CSharpReference x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">listEmailsFound</CSharpReference>
                            </OutArgument>
                          </ui:GetIMAPMailMessages.Messages>
                          <ui:GetIMAPMailMessages.Port>
                            <InArgument x:TypeArguments="x:Int32">
                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_157">intEmailPort_1</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.Port>
                          <ui:GetIMAPMailMessages.SecurePassword>
                            <InArgument x:TypeArguments="ss:SecureString">
                              <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_155">sstrPass</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.SecurePassword>
                          <ui:GetIMAPMailMessages.Server>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_156">strEmailServer_12</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.Server>
                          <ui:GetIMAPMailMessages.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32">
                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_160">intGetMailsTOms</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.TimeoutMS>
                          <ui:GetIMAPMailMessages.Top>
                            <InArgument x:TypeArguments="x:Int32">
                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_161">intGetEmailsTop</CSharpValue>
                            </InArgument>
                          </ui:GetIMAPMailMessages.Top>
                        </ui:GetIMAPMailMessages>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Else>
            </If>
            <If x:Key="2" sap2010:Annotation.AnnotationText="No E-mail ID provided?" DisplayName="If - arrEmailsIDToGet is null - Exchange" sap:VirtualizedContainerService.HintSize="334.4,56" sap2010:WorkflowViewState.IdRef="If_13">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_162">arrEmailsIDToGet == null || arrEmailsIDToGet.Count() &lt;= 0</CSharpValue>
                </InArgument>
              </If.Condition>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="486.4,139.2" sap2010:WorkflowViewState.IdRef="Sequence_33">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If sap2010:Annotation.AnnotationText="Get only Unread E-mails?" DisplayName="If - boolGetEmailsUnread - No ID - Exchange" sap:VirtualizedContainerService.HintSize="452.8,79.2" sap2010:WorkflowViewState.IdRef="If_14">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_163">boolGetEmailsUnread</CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,139.2" sap2010:WorkflowViewState.IdRef="Sequence_29">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If sap2010:Annotation.AnnotationText="Mark E-mails as read?" DisplayName="If - boolGetEmailsMarkRead - Unread - No ID - Exchange" sap:VirtualizedContainerService.HintSize="382.4,79.2" sap2010:WorkflowViewState.IdRef="If_16">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_164">boolGetEmailsMarkRead</CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_27">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetExchangeMailMessages ApplicationId="{x:Null}" DirectoryId="{x:Null}" EmailAutodiscover="{x:Null}" FilterByMessageIds="{x:Null}" Password="{x:Null}" SharedMailbox="{x:Null}" AuthenticationMode="UserNameAndPassword" DisplayName="Get Exchange Mail Messages - listEmailsFound - TT - No ID" ExchangeVersion="Exchange2010_SP1" GetAttachements="True" sap:VirtualizedContainerService.HintSize="382.4,48" sap2010:WorkflowViewState.IdRef="GetExchangeMailMessages_15" IsBodyHtml="False" MailFolder="Calendar" MarkAsRead="True" OnlyUnreadMessages="True" OrderByDate="OldestFirst">
                                <ui:GetExchangeMailMessages.CustomFolder>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_165">strEmailFolderFrom</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.CustomFolder>
                                <ui:GetExchangeMailMessages.Domain>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_171">strEmailDomain_2</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.Domain>
                                <ui:GetExchangeMailMessages.FilterExpression>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_167">strEmailsFilterToGet</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.FilterExpression>
                                <ui:GetExchangeMailMessages.Messages>
                                  <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">
                                    <CSharpReference x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_22">listEmailsFound</CSharpReference>
                                  </OutArgument>
                                </ui:GetExchangeMailMessages.Messages>
                                <ui:GetExchangeMailMessages.SecurePassword>
                                  <InArgument x:TypeArguments="ss:SecureString">
                                    <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_170">sstrPass</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.SecurePassword>
                                <ui:GetExchangeMailMessages.Server>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_168">strEmailServer_12</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.Server>
                                <ui:GetExchangeMailMessages.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_172">intGetMailsTOms</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.TimeoutMS>
                                <ui:GetExchangeMailMessages.Top>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_166">intGetEmailsTop</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.Top>
                                <ui:GetExchangeMailMessages.User>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_169">strLogin</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.User>
                              </ui:GetExchangeMailMessages>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_28">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetExchangeMailMessages ApplicationId="{x:Null}" DirectoryId="{x:Null}" EmailAutodiscover="{x:Null}" FilterByMessageIds="{x:Null}" Password="{x:Null}" SharedMailbox="{x:Null}" AuthenticationMode="UserNameAndPassword" DisplayName="Get Exchange Mail Messages - listEmailsFound - TF - No ID" ExchangeVersion="Exchange2010_SP1" GetAttachements="True" sap:VirtualizedContainerService.HintSize="382.4,48" sap2010:WorkflowViewState.IdRef="GetExchangeMailMessages_16" IsBodyHtml="False" MailFolder="Calendar" MarkAsRead="False" OnlyUnreadMessages="True" OrderByDate="OldestFirst">
                                <ui:GetExchangeMailMessages.CustomFolder>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_173">strEmailFolderFrom</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.CustomFolder>
                                <ui:GetExchangeMailMessages.Domain>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_179">strEmailDomain_2</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.Domain>
                                <ui:GetExchangeMailMessages.FilterExpression>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_175">strEmailsFilterToGet</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.FilterExpression>
                                <ui:GetExchangeMailMessages.Messages>
                                  <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">
                                    <CSharpReference x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_23">listEmailsFound</CSharpReference>
                                  </OutArgument>
                                </ui:GetExchangeMailMessages.Messages>
                                <ui:GetExchangeMailMessages.SecurePassword>
                                  <InArgument x:TypeArguments="ss:SecureString">
                                    <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_178">sstrPass</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.SecurePassword>
                                <ui:GetExchangeMailMessages.Server>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_176">strEmailServer_12</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.Server>
                                <ui:GetExchangeMailMessages.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_180">intGetMailsTOms</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.TimeoutMS>
                                <ui:GetExchangeMailMessages.Top>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_174">intGetEmailsTop</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.Top>
                                <ui:GetExchangeMailMessages.User>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_177">strLogin</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.User>
                              </ui:GetExchangeMailMessages>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,139.2" sap2010:WorkflowViewState.IdRef="Sequence_32">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If sap2010:Annotation.AnnotationText="Mark E-mails as read?" DisplayName="If - boolGetEmailsMarkRead - All - No ID - Exchange" sap:VirtualizedContainerService.HintSize="382.4,79.2" sap2010:WorkflowViewState.IdRef="If_17">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_181">boolGetEmailsMarkRead</CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_30">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetExchangeMailMessages ApplicationId="{x:Null}" DirectoryId="{x:Null}" EmailAutodiscover="{x:Null}" FilterByMessageIds="{x:Null}" Password="{x:Null}" SharedMailbox="{x:Null}" AuthenticationMode="UserNameAndPassword" DisplayName="Get Exchange Mail Messages - listEmailsFound - FT - No ID" ExchangeVersion="Exchange2010_SP1" GetAttachements="True" sap:VirtualizedContainerService.HintSize="382.4,48" sap2010:WorkflowViewState.IdRef="GetExchangeMailMessages_17" IsBodyHtml="False" MailFolder="Calendar" MarkAsRead="True" OnlyUnreadMessages="False" OrderByDate="OldestFirst">
                                <ui:GetExchangeMailMessages.CustomFolder>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_182">strEmailFolderFrom</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.CustomFolder>
                                <ui:GetExchangeMailMessages.Domain>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_188">strEmailDomain_2</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.Domain>
                                <ui:GetExchangeMailMessages.FilterExpression>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_184">strEmailsFilterToGet</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.FilterExpression>
                                <ui:GetExchangeMailMessages.Messages>
                                  <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">
                                    <CSharpReference x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_24">listEmailsFound</CSharpReference>
                                  </OutArgument>
                                </ui:GetExchangeMailMessages.Messages>
                                <ui:GetExchangeMailMessages.SecurePassword>
                                  <InArgument x:TypeArguments="ss:SecureString">
                                    <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_187">sstrPass</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.SecurePassword>
                                <ui:GetExchangeMailMessages.Server>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_185">strEmailServer_12</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.Server>
                                <ui:GetExchangeMailMessages.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_189">intGetMailsTOms</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.TimeoutMS>
                                <ui:GetExchangeMailMessages.Top>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_183">intGetEmailsTop</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.Top>
                                <ui:GetExchangeMailMessages.User>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_186">strLogin</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.User>
                              </ui:GetExchangeMailMessages>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_31">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetExchangeMailMessages ApplicationId="{x:Null}" DirectoryId="{x:Null}" EmailAutodiscover="{x:Null}" FilterByMessageIds="{x:Null}" Password="{x:Null}" SharedMailbox="{x:Null}" AuthenticationMode="UserNameAndPassword" DisplayName="Get Exchange Mail Messages - listEmailsFound - FF - No ID" ExchangeVersion="Exchange2010_SP1" GetAttachements="True" sap:VirtualizedContainerService.HintSize="382.4,48" sap2010:WorkflowViewState.IdRef="GetExchangeMailMessages_18" IsBodyHtml="False" MailFolder="Calendar" MarkAsRead="False" OnlyUnreadMessages="False" OrderByDate="OldestFirst">
                                <ui:GetExchangeMailMessages.CustomFolder>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_190">strEmailFolderFrom</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.CustomFolder>
                                <ui:GetExchangeMailMessages.Domain>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_196">strEmailDomain_2</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.Domain>
                                <ui:GetExchangeMailMessages.FilterExpression>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_192">strEmailsFilterToGet</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.FilterExpression>
                                <ui:GetExchangeMailMessages.Messages>
                                  <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">
                                    <CSharpReference x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_25">listEmailsFound</CSharpReference>
                                  </OutArgument>
                                </ui:GetExchangeMailMessages.Messages>
                                <ui:GetExchangeMailMessages.SecurePassword>
                                  <InArgument x:TypeArguments="ss:SecureString">
                                    <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_195">sstrPass</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.SecurePassword>
                                <ui:GetExchangeMailMessages.Server>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_193">strEmailServer_12</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.Server>
                                <ui:GetExchangeMailMessages.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_197">intGetMailsTOms</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.TimeoutMS>
                                <ui:GetExchangeMailMessages.Top>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_191">intGetEmailsTop</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.Top>
                                <ui:GetExchangeMailMessages.User>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_194">strLogin</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.User>
                              </ui:GetExchangeMailMessages>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="486.4,139.2" sap2010:WorkflowViewState.IdRef="Sequence_40">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If sap2010:Annotation.AnnotationText="Get only Unread E-mails?" DisplayName="If - boolGetEmailsUnread - ID - Exchange" sap:VirtualizedContainerService.HintSize="452.8,79.2" sap2010:WorkflowViewState.IdRef="If_15">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_198">boolGetEmailsUnread</CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,139.2" sap2010:WorkflowViewState.IdRef="Sequence_36">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If sap2010:Annotation.AnnotationText="Mark E-mails as read?" DisplayName="If - boolGetEmailsMarkRead - Unread - ID - Exchange" sap:VirtualizedContainerService.HintSize="382.4,79.2" sap2010:WorkflowViewState.IdRef="If_18">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_199">boolGetEmailsMarkRead</CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,136.8" sap2010:WorkflowViewState.IdRef="Sequence_34">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetExchangeMailMessages ApplicationId="{x:Null}" DirectoryId="{x:Null}" EmailAutodiscover="{x:Null}" Password="{x:Null}" SharedMailbox="{x:Null}" AuthenticationMode="UserNameAndPassword" DisplayName="Get Exchange Mail Messages - listEmailsFound - TT - ID" ExchangeVersion="Exchange2010_SP1" GetAttachements="True" sap:VirtualizedContainerService.HintSize="353.6,48" sap2010:WorkflowViewState.IdRef="GetExchangeMailMessages_19" IsBodyHtml="False" MailFolder="Calendar" MarkAsRead="True" OnlyUnreadMessages="True" OrderByDate="OldestFirst">
                                <ui:GetExchangeMailMessages.CustomFolder>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_200">strEmailFolderFrom</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.CustomFolder>
                                <ui:GetExchangeMailMessages.Domain>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_207">strEmailDomain_2</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.Domain>
                                <ui:GetExchangeMailMessages.FilterByMessageIds>
                                  <InArgument x:TypeArguments="s:String[]">
                                    <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_203">arrEmailsIDToGet</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.FilterByMessageIds>
                                <ui:GetExchangeMailMessages.FilterExpression>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_202">strEmailsFilterToGet</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.FilterExpression>
                                <ui:GetExchangeMailMessages.Messages>
                                  <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">
                                    <CSharpReference x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_26">listEmailsFound</CSharpReference>
                                  </OutArgument>
                                </ui:GetExchangeMailMessages.Messages>
                                <ui:GetExchangeMailMessages.SecurePassword>
                                  <InArgument x:TypeArguments="ss:SecureString">
                                    <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_206">sstrPass</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.SecurePassword>
                                <ui:GetExchangeMailMessages.Server>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_204">strEmailServer_12</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.Server>
                                <ui:GetExchangeMailMessages.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_208">intGetMailsTOms</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.TimeoutMS>
                                <ui:GetExchangeMailMessages.Top>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_201">intGetEmailsTop</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.Top>
                                <ui:GetExchangeMailMessages.User>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_205">strLogin</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.User>
                              </ui:GetExchangeMailMessages>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,136.8" sap2010:WorkflowViewState.IdRef="Sequence_35">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetExchangeMailMessages ApplicationId="{x:Null}" DirectoryId="{x:Null}" EmailAutodiscover="{x:Null}" Password="{x:Null}" SharedMailbox="{x:Null}" AuthenticationMode="UserNameAndPassword" DisplayName="Get Exchange Mail Messages - listEmailsFound - TF - ID" ExchangeVersion="Exchange2010_SP1" GetAttachements="True" sap:VirtualizedContainerService.HintSize="353.6,48" sap2010:WorkflowViewState.IdRef="GetExchangeMailMessages_20" IsBodyHtml="False" MailFolder="Calendar" MarkAsRead="False" OnlyUnreadMessages="True" OrderByDate="OldestFirst">
                                <ui:GetExchangeMailMessages.CustomFolder>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_209">strEmailFolderFrom</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.CustomFolder>
                                <ui:GetExchangeMailMessages.Domain>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_216">strEmailDomain_2</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.Domain>
                                <ui:GetExchangeMailMessages.FilterByMessageIds>
                                  <InArgument x:TypeArguments="s:String[]">
                                    <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_212">arrEmailsIDToGet</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.FilterByMessageIds>
                                <ui:GetExchangeMailMessages.FilterExpression>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_211">strEmailsFilterToGet</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.FilterExpression>
                                <ui:GetExchangeMailMessages.Messages>
                                  <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">
                                    <CSharpReference x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_27">listEmailsFound</CSharpReference>
                                  </OutArgument>
                                </ui:GetExchangeMailMessages.Messages>
                                <ui:GetExchangeMailMessages.SecurePassword>
                                  <InArgument x:TypeArguments="ss:SecureString">
                                    <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_215">sstrPass</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.SecurePassword>
                                <ui:GetExchangeMailMessages.Server>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_213">strEmailServer_12</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.Server>
                                <ui:GetExchangeMailMessages.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_217">intGetMailsTOms</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.TimeoutMS>
                                <ui:GetExchangeMailMessages.Top>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_210">intGetEmailsTop</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.Top>
                                <ui:GetExchangeMailMessages.User>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_214">strLogin</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.User>
                              </ui:GetExchangeMailMessages>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,139.2" sap2010:WorkflowViewState.IdRef="Sequence_39">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If sap2010:Annotation.AnnotationText="Mark E-mails as read?" DisplayName="If - boolGetEmailsMarkRead - All - ID - Exchange" sap:VirtualizedContainerService.HintSize="353.6,79.2" sap2010:WorkflowViewState.IdRef="If_19">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_218">boolGetEmailsMarkRead</CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,136.8" sap2010:WorkflowViewState.IdRef="Sequence_37">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetExchangeMailMessages ApplicationId="{x:Null}" DirectoryId="{x:Null}" EmailAutodiscover="{x:Null}" Password="{x:Null}" SharedMailbox="{x:Null}" AuthenticationMode="UserNameAndPassword" DisplayName="Get Exchange Mail Messages - listEmailsFound - FT - ID" ExchangeVersion="Exchange2010_SP1" GetAttachements="True" sap:VirtualizedContainerService.HintSize="353.6,48" sap2010:WorkflowViewState.IdRef="GetExchangeMailMessages_21" IsBodyHtml="False" MailFolder="Calendar" MarkAsRead="True" OnlyUnreadMessages="False" OrderByDate="OldestFirst">
                                <ui:GetExchangeMailMessages.CustomFolder>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_219">strEmailFolderFrom</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.CustomFolder>
                                <ui:GetExchangeMailMessages.Domain>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_226">strEmailDomain_2</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.Domain>
                                <ui:GetExchangeMailMessages.FilterByMessageIds>
                                  <InArgument x:TypeArguments="s:String[]">
                                    <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_222">arrEmailsIDToGet</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.FilterByMessageIds>
                                <ui:GetExchangeMailMessages.FilterExpression>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_221">strEmailsFilterToGet</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.FilterExpression>
                                <ui:GetExchangeMailMessages.Messages>
                                  <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">
                                    <CSharpReference x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_28">listEmailsFound</CSharpReference>
                                  </OutArgument>
                                </ui:GetExchangeMailMessages.Messages>
                                <ui:GetExchangeMailMessages.SecurePassword>
                                  <InArgument x:TypeArguments="ss:SecureString">
                                    <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_225">sstrPass</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.SecurePassword>
                                <ui:GetExchangeMailMessages.Server>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_223">strEmailServer_12</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.Server>
                                <ui:GetExchangeMailMessages.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_227">intGetMailsTOms</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.TimeoutMS>
                                <ui:GetExchangeMailMessages.Top>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_220">intGetEmailsTop</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.Top>
                                <ui:GetExchangeMailMessages.User>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_224">strLogin</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.User>
                              </ui:GetExchangeMailMessages>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,136.8" sap2010:WorkflowViewState.IdRef="Sequence_38">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetExchangeMailMessages ApplicationId="{x:Null}" DirectoryId="{x:Null}" EmailAutodiscover="{x:Null}" Password="{x:Null}" SharedMailbox="{x:Null}" AuthenticationMode="UserNameAndPassword" DisplayName="Get Exchange Mail Messages - listEmailsFound - FF - ID" ExchangeVersion="Exchange2010_SP1" GetAttachements="True" sap:VirtualizedContainerService.HintSize="353.6,48" sap2010:WorkflowViewState.IdRef="GetExchangeMailMessages_22" IsBodyHtml="False" MailFolder="Calendar" MarkAsRead="False" OnlyUnreadMessages="False" OrderByDate="OldestFirst">
                                <ui:GetExchangeMailMessages.CustomFolder>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_228">strEmailFolderFrom</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.CustomFolder>
                                <ui:GetExchangeMailMessages.Domain>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_235">strEmailDomain_2</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.Domain>
                                <ui:GetExchangeMailMessages.FilterByMessageIds>
                                  <InArgument x:TypeArguments="s:String[]">
                                    <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_231">arrEmailsIDToGet</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.FilterByMessageIds>
                                <ui:GetExchangeMailMessages.FilterExpression>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_230">strEmailsFilterToGet</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.FilterExpression>
                                <ui:GetExchangeMailMessages.Messages>
                                  <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">
                                    <CSharpReference x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_29">listEmailsFound</CSharpReference>
                                  </OutArgument>
                                </ui:GetExchangeMailMessages.Messages>
                                <ui:GetExchangeMailMessages.SecurePassword>
                                  <InArgument x:TypeArguments="ss:SecureString">
                                    <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_234">sstrPass</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.SecurePassword>
                                <ui:GetExchangeMailMessages.Server>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_232">strEmailServer_12</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.Server>
                                <ui:GetExchangeMailMessages.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_236">intGetMailsTOms</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.TimeoutMS>
                                <ui:GetExchangeMailMessages.Top>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_229">intGetEmailsTop</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.Top>
                                <ui:GetExchangeMailMessages.User>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_233">strLogin</CSharpValue>
                                  </InArgument>
                                </ui:GetExchangeMailMessages.User>
                              </ui:GetExchangeMailMessages>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Else>
            </If>
            <If x:Key="3" sap2010:Annotation.AnnotationText="No E-mail ID provided?" DisplayName="If - arrEmailsIDToGet is null - OutlookApp" sap:VirtualizedContainerService.HintSize="334.4,56" sap2010:WorkflowViewState.IdRef="If_20">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_237">arrEmailsIDToGet == null || arrEmailsIDToGet.Count() &lt;= 0</CSharpValue>
                </InArgument>
              </If.Condition>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If.Then>
                <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,139.2" sap2010:WorkflowViewState.IdRef="Sequence_47">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If sap2010:Annotation.AnnotationText="Get only Unread E-mails?" DisplayName="If - boolGetEmailsUnread - No ID - OutlookApp" sap:VirtualizedContainerService.HintSize="382.4,79.2" sap2010:WorkflowViewState.IdRef="If_21">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_238">boolGetEmailsUnread</CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,139.2" sap2010:WorkflowViewState.IdRef="Sequence_43">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If sap2010:Annotation.AnnotationText="Mark E-mails as read?" DisplayName="If - boolGetEmailsMarkRead - Unread - No ID - OutlookApp" sap:VirtualizedContainerService.HintSize="382.4,79.2" sap2010:WorkflowViewState.IdRef="If_23">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_239">boolGetEmailsMarkRead</CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_41">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetOutlookMailMessages FilterByMessageIds="{x:Null}" DisplayName="Get Outlook Mail Messages - listEmailsFound - TT - No ID" GetAttachements="False" sap:VirtualizedContainerService.HintSize="382.4,48" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_2" MarkAsRead="True" OnlyUnreadMessages="True" OrderByDate="OldestFirst">
                                <ui:GetOutlookMailMessages.Account>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_313">strEmailAccount_13</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.Account>
                                <ui:GetOutlookMailMessages.Filter>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_314">strEmailsFilterToGet</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.Filter>
                                <ui:GetOutlookMailMessages.MailFolder>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_312">strEmailFolderFrom</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.MailFolder>
                                <ui:GetOutlookMailMessages.Messages>
                                  <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">
                                    <CSharpReference x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_38">listEmailsFound</CSharpReference>
                                  </OutArgument>
                                </ui:GetOutlookMailMessages.Messages>
                                <ui:GetOutlookMailMessages.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_315">intGetMailsTOms</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.TimeoutMS>
                                <ui:GetOutlookMailMessages.Top>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_316">intGetEmailsTop</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.Top>
                              </ui:GetOutlookMailMessages>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,108" sap2010:WorkflowViewState.IdRef="Sequence_42">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetOutlookMailMessages FilterByMessageIds="{x:Null}" DisplayName="Get Outlook Mail Messages - listEmailsFound - TF - No ID" GetAttachements="False" sap:VirtualizedContainerService.HintSize="382.4,48" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_3" MarkAsRead="False" OnlyUnreadMessages="True" OrderByDate="OldestFirst">
                                <ui:GetOutlookMailMessages.Account>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_318">strEmailAccount_13</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.Account>
                                <ui:GetOutlookMailMessages.Filter>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_319">strEmailsFilterToGet</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.Filter>
                                <ui:GetOutlookMailMessages.MailFolder>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_317">strEmailFolderFrom</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.MailFolder>
                                <ui:GetOutlookMailMessages.Messages>
                                  <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">
                                    <CSharpReference x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_39">listEmailsFound</CSharpReference>
                                  </OutArgument>
                                </ui:GetOutlookMailMessages.Messages>
                                <ui:GetOutlookMailMessages.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_320">intGetMailsTOms</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.TimeoutMS>
                                <ui:GetOutlookMailMessages.Top>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_321">intGetEmailsTop</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.Top>
                              </ui:GetOutlookMailMessages>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,139.2" sap2010:WorkflowViewState.IdRef="Sequence_46">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If sap2010:Annotation.AnnotationText="Mark E-mails as read?" DisplayName="If - boolGetEmailsMarkRead - All - No ID - OutlookApp" sap:VirtualizedContainerService.HintSize="353.6,79.2" sap2010:WorkflowViewState.IdRef="If_24">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_256">boolGetEmailsMarkRead</CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,136.8" sap2010:WorkflowViewState.IdRef="Sequence_44">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetOutlookMailMessages FilterByMessageIds="{x:Null}" DisplayName="Get Outlook Mail Messages - listEmailsFound - FT - No ID" GetAttachements="False" sap:VirtualizedContainerService.HintSize="353.6,48" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_4" MarkAsRead="True" OnlyUnreadMessages="False" OrderByDate="OldestFirst">
                                <ui:GetOutlookMailMessages.Account>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_323">strEmailAccount_13</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.Account>
                                <ui:GetOutlookMailMessages.Filter>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_324">strEmailsFilterToGet</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.Filter>
                                <ui:GetOutlookMailMessages.MailFolder>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_322">strEmailFolderFrom</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.MailFolder>
                                <ui:GetOutlookMailMessages.Messages>
                                  <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">
                                    <CSharpReference x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_40">listEmailsFound</CSharpReference>
                                  </OutArgument>
                                </ui:GetOutlookMailMessages.Messages>
                                <ui:GetOutlookMailMessages.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_325">intGetMailsTOms</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.TimeoutMS>
                                <ui:GetOutlookMailMessages.Top>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_326">intGetEmailsTop</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.Top>
                              </ui:GetOutlookMailMessages>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,136.8" sap2010:WorkflowViewState.IdRef="Sequence_45">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetOutlookMailMessages FilterByMessageIds="{x:Null}" DisplayName="Get Outlook Mail Messages - listEmailsFound - FF - No ID" GetAttachements="False" sap:VirtualizedContainerService.HintSize="353.6,48" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_5" MarkAsRead="False" OnlyUnreadMessages="False" OrderByDate="OldestFirst">
                                <ui:GetOutlookMailMessages.Account>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_328">strEmailAccount_13</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.Account>
                                <ui:GetOutlookMailMessages.Filter>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_329">strEmailsFilterToGet</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.Filter>
                                <ui:GetOutlookMailMessages.MailFolder>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_327">strEmailFolderFrom</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.MailFolder>
                                <ui:GetOutlookMailMessages.Messages>
                                  <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">
                                    <CSharpReference x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_41">listEmailsFound</CSharpReference>
                                  </OutArgument>
                                </ui:GetOutlookMailMessages.Messages>
                                <ui:GetOutlookMailMessages.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_330">intGetMailsTOms</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.TimeoutMS>
                                <ui:GetOutlookMailMessages.Top>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_331">intGetEmailsTop</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.Top>
                              </ui:GetOutlookMailMessages>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,139.2" sap2010:WorkflowViewState.IdRef="Sequence_54">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <If sap2010:Annotation.AnnotationText="Get only Unread E-mails?" DisplayName="If - boolGetEmailsUnread - ID - OutlookApp" sap:VirtualizedContainerService.HintSize="382.4,79.2" sap2010:WorkflowViewState.IdRef="If_22">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_273">boolGetEmailsUnread</CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,168" sap2010:WorkflowViewState.IdRef="Sequence_50">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If sap2010:Annotation.AnnotationText="Mark E-mails as read?" DisplayName="If - boolGetEmailsMarkRead - Unread - ID - OutlookApp" sap:VirtualizedContainerService.HintSize="353.6,79.2" sap2010:WorkflowViewState.IdRef="If_25">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_274">boolGetEmailsMarkRead</CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,136.8" sap2010:WorkflowViewState.IdRef="Sequence_48">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetOutlookMailMessages DisplayName="Get Outlook Mail Messages - listEmailsFound - TT - ID" GetAttachements="False" sap:VirtualizedContainerService.HintSize="353.6,48" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_6" MarkAsRead="True" OnlyUnreadMessages="True" OrderByDate="OldestFirst">
                                <ui:GetOutlookMailMessages.Account>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_333">strEmailAccount_13</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.Account>
                                <ui:GetOutlookMailMessages.Filter>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_334">strEmailsFilterToGet</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.Filter>
                                <ui:GetOutlookMailMessages.FilterByMessageIds>
                                  <InArgument x:TypeArguments="s:String[]">
                                    <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_335">arrEmailsIDToGet</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.FilterByMessageIds>
                                <ui:GetOutlookMailMessages.MailFolder>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_332">strEmailFolderFrom</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.MailFolder>
                                <ui:GetOutlookMailMessages.Messages>
                                  <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">
                                    <CSharpReference x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_42">listEmailsFound</CSharpReference>
                                  </OutArgument>
                                </ui:GetOutlookMailMessages.Messages>
                                <ui:GetOutlookMailMessages.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_336">intGetMailsTOms</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.TimeoutMS>
                                <ui:GetOutlookMailMessages.Top>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_337">intGetEmailsTop</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.Top>
                              </ui:GetOutlookMailMessages>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,136.8" sap2010:WorkflowViewState.IdRef="Sequence_49">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetOutlookMailMessages DisplayName="Get Outlook Mail Messages - listEmailsFound - TF - ID" GetAttachements="False" sap:VirtualizedContainerService.HintSize="353.6,48" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_7" MarkAsRead="False" OnlyUnreadMessages="True" OrderByDate="OldestFirst">
                                <ui:GetOutlookMailMessages.Account>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_339">strEmailAccount_13</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.Account>
                                <ui:GetOutlookMailMessages.Filter>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_340">strEmailsFilterToGet</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.Filter>
                                <ui:GetOutlookMailMessages.FilterByMessageIds>
                                  <InArgument x:TypeArguments="s:String[]">
                                    <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_341">arrEmailsIDToGet</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.FilterByMessageIds>
                                <ui:GetOutlookMailMessages.MailFolder>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_338">strEmailFolderFrom</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.MailFolder>
                                <ui:GetOutlookMailMessages.Messages>
                                  <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">
                                    <CSharpReference x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_43">listEmailsFound</CSharpReference>
                                  </OutArgument>
                                </ui:GetOutlookMailMessages.Messages>
                                <ui:GetOutlookMailMessages.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_342">intGetMailsTOms</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.TimeoutMS>
                                <ui:GetOutlookMailMessages.Top>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_343">intGetEmailsTop</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.Top>
                              </ui:GetOutlookMailMessages>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,168" sap2010:WorkflowViewState.IdRef="Sequence_53">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If sap2010:Annotation.AnnotationText="Mark E-mails as read?" DisplayName="If - boolGetEmailsMarkRead - All - ID - OutlookApp" sap:VirtualizedContainerService.HintSize="353.6,79.2" sap2010:WorkflowViewState.IdRef="If_26">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_293">boolGetEmailsMarkRead</CSharpValue>
                            </InArgument>
                          </If.Condition>
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If.Then>
                            <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,136.8" sap2010:WorkflowViewState.IdRef="Sequence_51">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetOutlookMailMessages DisplayName="Get Outlook Mail Messages - listEmailsFound - FT - ID" GetAttachements="False" sap:VirtualizedContainerService.HintSize="353.6,48" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_8" MarkAsRead="True" OnlyUnreadMessages="False" OrderByDate="OldestFirst">
                                <ui:GetOutlookMailMessages.Account>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_345">strEmailAccount_13</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.Account>
                                <ui:GetOutlookMailMessages.Filter>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_346">strEmailsFilterToGet</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.Filter>
                                <ui:GetOutlookMailMessages.FilterByMessageIds>
                                  <InArgument x:TypeArguments="s:String[]">
                                    <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_347">arrEmailsIDToGet</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.FilterByMessageIds>
                                <ui:GetOutlookMailMessages.MailFolder>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_344">strEmailFolderFrom</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.MailFolder>
                                <ui:GetOutlookMailMessages.Messages>
                                  <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">
                                    <CSharpReference x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_44">listEmailsFound</CSharpReference>
                                  </OutArgument>
                                </ui:GetOutlookMailMessages.Messages>
                                <ui:GetOutlookMailMessages.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_348">intGetMailsTOms</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.TimeoutMS>
                                <ui:GetOutlookMailMessages.Top>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_349">intGetEmailsTop</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.Top>
                              </ui:GetOutlookMailMessages>
                            </Sequence>
                          </If.Then>
                          <If.Else>
                            <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,136.8" sap2010:WorkflowViewState.IdRef="Sequence_52">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <ui:GetOutlookMailMessages DisplayName="Get Outlook Mail Messages - listEmailsFound - FF - ID" GetAttachements="False" sap:VirtualizedContainerService.HintSize="353.6,48" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_9" MarkAsRead="False" OnlyUnreadMessages="False" OrderByDate="OldestFirst">
                                <ui:GetOutlookMailMessages.Account>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_351">strEmailAccount_13</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.Account>
                                <ui:GetOutlookMailMessages.Filter>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_352">strEmailsFilterToGet</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.Filter>
                                <ui:GetOutlookMailMessages.FilterByMessageIds>
                                  <InArgument x:TypeArguments="s:String[]">
                                    <CSharpValue x:TypeArguments="s:String[]" sap2010:WorkflowViewState.IdRef="CSharpValue`1_353">arrEmailsIDToGet</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.FilterByMessageIds>
                                <ui:GetOutlookMailMessages.MailFolder>
                                  <InArgument x:TypeArguments="x:String">
                                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_350">strEmailFolderFrom</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.MailFolder>
                                <ui:GetOutlookMailMessages.Messages>
                                  <OutArgument x:TypeArguments="scg:List(snm:MailMessage)">
                                    <CSharpReference x:TypeArguments="scg:List(snm:MailMessage)" sap2010:WorkflowViewState.IdRef="CSharpReference`1_45">listEmailsFound</CSharpReference>
                                  </OutArgument>
                                </ui:GetOutlookMailMessages.Messages>
                                <ui:GetOutlookMailMessages.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_354">intGetMailsTOms</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.TimeoutMS>
                                <ui:GetOutlookMailMessages.Top>
                                  <InArgument x:TypeArguments="x:Int32">
                                    <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_355">intGetEmailsTop</CSharpValue>
                                  </InArgument>
                                </ui:GetOutlookMailMessages.Top>
                              </ui:GetOutlookMailMessages>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                    </If.Else>
                  </If>
                </Sequence>
              </If.Else>
            </If>
          </Switch>
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean" />
      </ui:RetryScope.Condition>
      <ui:RetryScope.NumberOfRetries>
        <InArgument x:TypeArguments="x:Int32">
          <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">intGetMailsRSNR</CSharpValue>
        </InArgument>
      </ui:RetryScope.NumberOfRetries>
      <ui:RetryScope.RetryInterval>
        <InArgument x:TypeArguments="x:TimeSpan">
          <CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">tsGetMailsRSTS</CSharpValue>
        </InArgument>
      </ui:RetryScope.RetryInterval>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:RetryScope>
    <ui:LogMessage DisplayName="Log Message - 91" sap:VirtualizedContainerService.HintSize="416,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_358" xml:space="preserve">"Using method: " + (intSMTP_1_Exchange_2_Outlook_3 == 1 ? "SMTP" : intSMTP_1_Exchange_2_Outlook_3 == 2 ? "Exchange" : "Outlook Application") + 
(boolGetEmailsUnread ? ", Only unread" : ", All") + 
" E-mails [" + 
((arrEmailsIDToGet != null &amp;&amp; arrEmailsIDToGet.Count() &gt; 0 &amp;&amp; !string.IsNullOrEmpty(strEmailsFilterToGet)) ? "ID: " + string.Join(", ", arrEmailsIDToGet) : 
	(arrEmailsIDToGet != null &amp;&amp; arrEmailsIDToGet.Count() &gt; 0) ? "ID: " + string.Join(", ", arrEmailsIDToGet) : 
	(!string.IsNullOrEmpty(strEmailsFilterToGet)) ? "Filter: " + strEmailsFilterToGet : "No filter or ID") + 
"] found in: " +
strEmailFolderFrom + ": " + listEmailsFound.Count.ToString() + ", Limit set to: " + intGetEmailsTop.ToString()</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
    <ui:LogMessage DisplayName="Log Message - 92" sap:VirtualizedContainerService.HintSize="416,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">"Stop - Outlook Get Emails"</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
  </Sequence>
</Activity>