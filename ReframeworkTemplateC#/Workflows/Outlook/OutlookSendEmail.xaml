<Activity mc:Ignorable="sap sap2010" x:Class="SendEmail" this:SendEmail.intSMTP_1_Exchange_2_Outlook_3="2" this:SendEmail.strEmailTO="piotr.gajewskirpa@gmail.com" this:SendEmail.strEmailSubject="Test subject" this:SendEmail.strEmailBody="Hello,&lt;br&gt;&lt;br&gt;this is test E-mail.&lt;br&gt;&lt;br&gt;Robot" this:SendEmail.boolIsBodyHTML="True" this:SendEmail.strEmailCredName_12="Robot1_OutlookCredentials" this:SendEmail.strEmailCredFolder_12="Default" this:SendEmail.intEmailPort_1="587" this:SendEmail.strEmailDomain_2="domain_name" this:SendEmail.strEmailServer_12="https://outlook.domain_name.pl/EWS/Exchange.asmx" this:SendEmail.strEmailAccount_3="piotr.gajewskirpa@gmail.com" this:SendEmail.boolSaveCopyInSentItems_2="False" this:SendEmail.intSendEmailTOms="16000" this:SendEmail.intGetCredTOms="8000" this:SendEmail.tsDelAfterSend="00:00:03" this:SendEmail.intSendEmailRSNR="2" this:SendEmail.tsSendEmailRSTS="00:00:10" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ss="clr-namespace:System.Security;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="intSMTP_1_Exchange_2_Outlook_3" Type="InArgument(x:Int32)" />
    <x:Property Name="strEmailTO" Type="InArgument(x:String)" />
    <x:Property Name="strEmailCC" Type="InArgument(x:String)" />
    <x:Property Name="strEmailSubject" Type="InArgument(x:String)" />
    <x:Property Name="strEmailBody" Type="InArgument(x:String)" />
    <x:Property Name="strAttachmentPath" Type="InArgument(x:String)" />
    <x:Property Name="listAttachmentList" Type="InArgument(scg:List(x:String))" />
    <x:Property Name="boolIsBodyHTML" Type="InArgument(x:Boolean)" />
    <x:Property Name="strEmailCredName_12" Type="InArgument(x:String)" />
    <x:Property Name="strEmailCredFolder_12" Type="InArgument(x:String)" />
    <x:Property Name="intEmailPort_1" Type="InArgument(x:Int32)" />
    <x:Property Name="strEmailDomain_2" Type="InArgument(x:String)" />
    <x:Property Name="strEmailServer_12" Type="InArgument(x:String)" />
    <x:Property Name="strEmailAccount_3" Type="InArgument(x:String)" />
    <x:Property Name="strEmailDisplayName_12" Type="InArgument(x:String)" />
    <x:Property Name="strEmailSendOnBehalf_123" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="If set to true, strEmailSendOnBehalf_123 must be provided." Name="boolSaveCopyInSentItems_2" Type="InArgument(x:Boolean)" />
    <x:Property Name="intSendEmailTOms" Type="InArgument(x:Int32)" />
    <x:Property Name="intGetCredTOms" Type="InArgument(x:Int32)" />
    <x:Property Name="tsDelAfterSend" Type="InArgument(x:TimeSpan)" />
    <x:Property Name="intSendEmailRSNR" Type="InArgument(x:Int32)" />
    <x:Property Name="tsSendEmailRSTS" Type="InArgument(x:TimeSpan)" />
  </x:Members>
  <this:SendEmail.strEmailCC>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:SendEmail.strEmailCC>
  <this:SendEmail.strAttachmentPath>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:SendEmail.strAttachmentPath>
  <this:SendEmail.listAttachmentList>
    <InArgument x:TypeArguments="scg:List(x:String)">
      <CSharpValue x:TypeArguments="scg:List(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">null</CSharpValue>
    </InArgument>
  </this:SendEmail.listAttachmentList>
  <this:SendEmail.strEmailDisplayName_12>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:SendEmail.strEmailDisplayName_12>
  <this:SendEmail.strEmailSendOnBehalf_123>
    <InArgument x:TypeArguments="x:String">
      <Literal x:TypeArguments="x:String" Value="" />
    </InArgument>
  </this:SendEmail.strEmailSendOnBehalf_123>
  <sap2010:ExpressionActivityEditor.ExpressionActivityEditor>C#</sap2010:ExpressionActivityEditor.ExpressionActivityEditor>
  <sap:VirtualizedContainerService.HintSize>674.4,1098.4</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Security</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.SMTP.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>Microsoft.Exchange.WebServices.Data</x:String>
      <x:String>UiPath.Mail.Exchange</x:String>
      <x:String>UiPath.Mail.Exchange.Activities</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.Exchange.WebServices</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Send E-mail with given details.&#xA;smtp.office365.com" DisplayName="OutlookSendEmail" sap:VirtualizedContainerService.HintSize="867.6,968" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strLogin" />
      <Variable x:TypeArguments="ss:SecureString" Name="sstrPass" />
      <Variable x:TypeArguments="x:Int32" Name="intNoAttach_0_Path_1_List_2" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message - 97" sap:VirtualizedContainerService.HintSize="449.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_222">"Start - Outlook Send Email"</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
    <If sap2010:Annotation.AnnotationText="Read E-mail credentials?" DisplayName="If - strEmailCredName_12 != &quot;&quot;" sap:VirtualizedContainerService.HintSize="449.6,88" sap2010:WorkflowViewState.IdRef="If_1">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">
          <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">strEmailCredName_12 != ""</CSharpValue>
        </InArgument>
      </If.Condition>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <ui:GetRobotCredential CacheStrategy="None" DisplayName="Get Credential - strEmailCredName_12" sap:VirtualizedContainerService.HintSize="416,143.2" sap2010:WorkflowViewState.IdRef="GetRobotCredential_2">
          <ui:GetRobotCredential.AssetName>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_224">strEmailCredName_12</CSharpValue>
            </InArgument>
          </ui:GetRobotCredential.AssetName>
          <ui:GetRobotCredential.FolderPath>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_226">strEmailCredFolder_12</CSharpValue>
            </InArgument>
          </ui:GetRobotCredential.FolderPath>
          <ui:GetRobotCredential.Password>
            <OutArgument x:TypeArguments="ss:SecureString">
              <CSharpReference x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpReference`1_9">sstrPass</CSharpReference>
            </OutArgument>
          </ui:GetRobotCredential.Password>
          <ui:GetRobotCredential.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32">
              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_225">intGetCredTOms</CSharpValue>
            </InArgument>
          </ui:GetRobotCredential.TimeoutMS>
          <ui:GetRobotCredential.Username>
            <OutArgument x:TypeArguments="x:String">
              <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">strLogin</CSharpReference>
            </OutArgument>
          </ui:GetRobotCredential.Username>
        </ui:GetRobotCredential>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <Sequence sap2010:Annotation.AnnotationText="Prepare variables." DisplayName="Set Vars" sap:VirtualizedContainerService.HintSize="449.6,88" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <Assign DisplayName="Assign - strEmailTO" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">
            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_15">strEmailTO</CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">strEmailTO.Replace(" ", "").Replace(",", ";").Replace(Environment.NewLine, "").TrimEnd(';')</CSharpValue>
          </InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Assign - strEmailCC" sap:VirtualizedContainerService.HintSize="433.6,113.6" sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="x:String">
            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_16">strEmailCC</CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">!string.IsNullOrEmpty(strEmailCC) ? strEmailCC.Replace(" ", "").Replace(",", ";").Replace(Environment.NewLine, "").TrimEnd(';') : strEmailCC</CSharpValue>
          </InArgument>
        </Assign.Value>
      </Assign>
      <If sap2010:Annotation.AnnotationText="Is strAttachmentPath and listAttachmentList empty?" DisplayName="If - No Attachments" sap:VirtualizedContainerService.HintSize="433.6,100.8" sap2010:WorkflowViewState.IdRef="If_2">
        <If.Condition>
          <InArgument x:TypeArguments="x:Boolean">
            <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">string.IsNullOrEmpty(strAttachmentPath) &amp;&amp; (listAttachmentList == null || (listAttachmentList != null &amp;&amp; listAttachmentList.Count == 0))</CSharpValue>
          </InArgument>
        </If.Condition>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Assign DisplayName="Assign - intNoAttach_0_Path_1_List_2 - 0" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_6">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">
                <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_10">intNoAttach_0_Path_1_List_2</CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">0</InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="433.6,89.6" sap2010:WorkflowViewState.IdRef="Sequence_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
      <If sap2010:Annotation.AnnotationText="Is strAttachmentPath provided?" DisplayName="If - strAttachmentPath" sap:VirtualizedContainerService.HintSize="433.6,100.8" sap2010:WorkflowViewState.IdRef="If_3">
        <If.Condition>
          <InArgument x:TypeArguments="x:Boolean">
            <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">!string.IsNullOrEmpty(strAttachmentPath)</CSharpValue>
          </InArgument>
        </If.Condition>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Assign DisplayName="Assign - intNoAttach_0_Path_1_List_2 - 1" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_7">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">
                <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_11">intNoAttach_0_Path_1_List_2</CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">1</InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="433.6,89.6" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
      <If sap2010:Annotation.AnnotationText="Is listAttachmentList provided?" DisplayName="If - listAttachmentList" sap:VirtualizedContainerService.HintSize="433.6,100.8" sap2010:WorkflowViewState.IdRef="If_4">
        <If.Condition>
          <InArgument x:TypeArguments="x:Boolean">
            <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">listAttachmentList != null &amp;&amp; listAttachmentList.Count &gt; 0</CSharpValue>
          </InArgument>
        </If.Condition>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Assign DisplayName="Assign - intNoAttach_0_Path_1_List_2 - 2" sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_8">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">
                <CSharpReference x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpReference`1_12">intNoAttach_0_Path_1_List_2</CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">2</InArgument>
            </Assign.Value>
          </Assign>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="433.6,89.6" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
      <If sap2010:Annotation.AnnotationText="Is strAttachmentPath and listAttachmentList providd?" DisplayName="If - strAttachmentPath And listAttachmentList" sap:VirtualizedContainerService.HintSize="433.6,92" sap2010:WorkflowViewState.IdRef="If_5">
        <If.Condition>
          <InArgument x:TypeArguments="x:Boolean">
            <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">!string.IsNullOrEmpty(strAttachmentPath) &amp;&amp; (listAttachmentList != null &amp;&amp; listAttachmentList.Count &gt; 0)</CSharpValue>
          </InArgument>
        </If.Condition>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <If.Then>
          <Throw DisplayName="Throw - Email Attachments Overflow" sap:VirtualizedContainerService.HintSize="416,90.4" sap2010:WorkflowViewState.IdRef="Throw_2">
            <InArgument x:TypeArguments="s:Exception">
              <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_420">new BusinessRuleException("Too many attachment sources. Please provide: strAttachmentPath OR listAttachmentList."){Data = {{"ExType", "BE"}}}</CSharpValue>
            </InArgument>
          </Throw>
        </If.Then>
        <If.Else>
          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_12">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
    <ui:LogMessage DisplayName="Log Message - 98" sap:VirtualizedContainerService.HintSize="449.6,174.4" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_417" xml:space="preserve">"Using method: " + (intSMTP_1_Exchange_2_Outlook_3 == 1 ? "SMTP" : intSMTP_1_Exchange_2_Outlook_3 == 2 ? "Exchange" : "Outlook Application") + 
", Attachments: " + (intNoAttach_0_Path_1_List_2 == 0 ? "0" : intNoAttach_0_Path_1_List_2 == 1 ? "1" : listAttachmentList.Count.ToString()) + 
", E-mail sent to: " + (string.IsNullOrEmpty(strEmailCC) ? strEmailTO : strEmailTO + ", CC: " + strEmailCC)</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
    <ui:RetryScope sap2010:Annotation.AnnotationText="Try to send E-mail to given recipients." DisplayName="Retry Scope - Switch - intSMTP_1_Exchange_2_OutlookApp_3" sap:VirtualizedContainerService.HintSize="449.6,88" sap2010:WorkflowViewState.IdRef="RetryScope_1">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <Switch x:TypeArguments="x:Int32" sap2010:Annotation.AnnotationText="Choose which method to use." DisplayName="Switch - intSMTP_1_Exchange_2_OutlookApp_3" sap:VirtualizedContainerService.HintSize="340.8,68.8" sap2010:WorkflowViewState.IdRef="Switch`1_1">
            <Switch.Default>
              <Throw DisplayName="Throw - Invalid Option" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="Throw_3">
                <InArgument x:TypeArguments="s:Exception">
                  <CSharpValue x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="CSharpValue`1_421">new BusinessRuleException("Invalid option selected. Please choose between: 1, 2 or 3."){Data = {{"ExType", "BE"}}}</CSharpValue>
                </InArgument>
              </Throw>
            </Switch.Default>
            <Switch.Expression>
              <InArgument x:TypeArguments="x:Int32">
                <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">intSMTP_1_Exchange_2_Outlook_3</CSharpValue>
              </InArgument>
            </Switch.Expression>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Switch x:TypeArguments="x:Int32" x:Key="1" sap2010:Annotation.AnnotationText="Choose number of attachments." DisplayName="Switch&lt;Int32&gt; - intNoAttach_0_Path_1_List_2 - SMTP" sap:VirtualizedContainerService.HintSize="334.4,68.8" sap2010:WorkflowViewState.IdRef="Switch`1_2">
              <Switch.Default>
                <Sequence DisplayName="Default" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_13">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </Switch.Default>
              <Switch.Expression>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">intNoAttach_0_Path_1_List_2</CSharpValue>
                </InArgument>
              </Switch.Expression>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If x:Key="0" sap2010:Annotation.AnnotationText="Is E-mail Body in HTML?" DisplayName="If - boolIsBodyHTML - SMTP - 0" sap:VirtualizedContainerService.HintSize="416,56" sap2010:WorkflowViewState.IdRef="If_6">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">boolIsBodyHTML</CSharpValue>
                  </InArgument>
                </If.Condition>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <ui:SendMail Bcc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" ReplyTo="{x:Null}" Result="{x:Null}" UseOAuth="{x:Null}" DisplayName="Send SMTP Mail Message - HTML - 0" EnableSSL="True" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendMail_7" IgnoreCRL="False" IsBodyHtml="True" SecureConnection="Auto">
                    <ui:SendMail.Body>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_237">strEmailBody</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Body>
                    <ui:SendMail.Cc>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_235">strEmailCC</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Cc>
                    <ui:SendMail.Email>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_228">strLogin</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Email>
                    <ui:SendMail.Files>
                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                    </ui:SendMail.Files>
                    <ui:SendMail.From>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_233">strEmailSendOnBehalf_123</CSharpValue>
                      </InArgument>
                    </ui:SendMail.From>
                    <ui:SendMail.Name>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_232">strEmailDisplayName_12</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Name>
                    <ui:SendMail.Port>
                      <InArgument x:TypeArguments="x:Int32">
                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_231">intEmailPort_1</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Port>
                    <ui:SendMail.SecurePassword>
                      <InArgument x:TypeArguments="ss:SecureString">
                        <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_229">sstrPass</CSharpValue>
                      </InArgument>
                    </ui:SendMail.SecurePassword>
                    <ui:SendMail.Server>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_230">strEmailServer_12</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Server>
                    <ui:SendMail.Subject>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_236">strEmailSubject</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Subject>
                    <ui:SendMail.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32">
                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_238">intSendEmailTOms</CSharpValue>
                      </InArgument>
                    </ui:SendMail.TimeoutMS>
                    <ui:SendMail.To>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_234">strEmailTO</CSharpValue>
                      </InArgument>
                    </ui:SendMail.To>
                  </ui:SendMail>
                </If.Then>
                <If.Else>
                  <ui:SendMail Bcc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" ReplyTo="{x:Null}" Result="{x:Null}" UseOAuth="{x:Null}" DisplayName="Send SMTP Mail Message - Not HTML - 0" EnableSSL="True" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendMail_8" IgnoreCRL="False" IsBodyHtml="False" SecureConnection="Auto">
                    <ui:SendMail.Body>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_248">strEmailBody</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Body>
                    <ui:SendMail.Cc>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_246">strEmailCC</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Cc>
                    <ui:SendMail.Email>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_239">strLogin</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Email>
                    <ui:SendMail.Files>
                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                    </ui:SendMail.Files>
                    <ui:SendMail.From>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_244">strEmailSendOnBehalf_123</CSharpValue>
                      </InArgument>
                    </ui:SendMail.From>
                    <ui:SendMail.Name>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_243">strEmailDisplayName_12</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Name>
                    <ui:SendMail.Port>
                      <InArgument x:TypeArguments="x:Int32">
                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_242">intEmailPort_1</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Port>
                    <ui:SendMail.SecurePassword>
                      <InArgument x:TypeArguments="ss:SecureString">
                        <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_240">sstrPass</CSharpValue>
                      </InArgument>
                    </ui:SendMail.SecurePassword>
                    <ui:SendMail.Server>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_241">strEmailServer_12</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Server>
                    <ui:SendMail.Subject>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_247">strEmailSubject</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Subject>
                    <ui:SendMail.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32">
                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_249">intSendEmailTOms</CSharpValue>
                      </InArgument>
                    </ui:SendMail.TimeoutMS>
                    <ui:SendMail.To>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_245">strEmailTO</CSharpValue>
                      </InArgument>
                    </ui:SendMail.To>
                  </ui:SendMail>
                </If.Else>
              </If>
              <If x:Key="1" sap2010:Annotation.AnnotationText="Is E-mail Body in HTML?" DisplayName="If - boolIsBodyHTML - SMTP - 1" sap:VirtualizedContainerService.HintSize="416,56" sap2010:WorkflowViewState.IdRef="If_8">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">boolIsBodyHTML</CSharpValue>
                  </InArgument>
                </If.Condition>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <ui:SendMail Bcc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" ReplyTo="{x:Null}" Result="{x:Null}" UseOAuth="{x:Null}" DisplayName="Send SMTP Mail Message - HTML - 1" EnableSSL="True" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendMail_9" IgnoreCRL="False" IsBodyHtml="True" SecureConnection="Auto">
                    <ui:SendMail.Body>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_259">strEmailBody</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Body>
                    <ui:SendMail.Cc>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_257">strEmailCC</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Cc>
                    <ui:SendMail.Email>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_250">strLogin</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Email>
                    <ui:SendMail.Files>
                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_261">strAttachmentPath</CSharpValue>
                        </InArgument>
                      </scg:List>
                    </ui:SendMail.Files>
                    <ui:SendMail.From>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_255">strEmailSendOnBehalf_123</CSharpValue>
                      </InArgument>
                    </ui:SendMail.From>
                    <ui:SendMail.Name>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_254">strEmailDisplayName_12</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Name>
                    <ui:SendMail.Port>
                      <InArgument x:TypeArguments="x:Int32">
                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_253">intEmailPort_1</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Port>
                    <ui:SendMail.SecurePassword>
                      <InArgument x:TypeArguments="ss:SecureString">
                        <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_251">sstrPass</CSharpValue>
                      </InArgument>
                    </ui:SendMail.SecurePassword>
                    <ui:SendMail.Server>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_252">strEmailServer_12</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Server>
                    <ui:SendMail.Subject>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_258">strEmailSubject</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Subject>
                    <ui:SendMail.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32">
                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_260">intSendEmailTOms</CSharpValue>
                      </InArgument>
                    </ui:SendMail.TimeoutMS>
                    <ui:SendMail.To>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_256">strEmailTO</CSharpValue>
                      </InArgument>
                    </ui:SendMail.To>
                  </ui:SendMail>
                </If.Then>
                <If.Else>
                  <ui:SendMail Bcc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" ReplyTo="{x:Null}" Result="{x:Null}" UseOAuth="{x:Null}" DisplayName="Send SMTP Mail Message - Not HTML - 1" EnableSSL="True" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendMail_10" IgnoreCRL="False" IsBodyHtml="False" SecureConnection="Auto">
                    <ui:SendMail.Body>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_271">strEmailBody</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Body>
                    <ui:SendMail.Cc>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_269">strEmailCC</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Cc>
                    <ui:SendMail.Email>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_262">strLogin</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Email>
                    <ui:SendMail.Files>
                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_273">strAttachmentPath</CSharpValue>
                        </InArgument>
                      </scg:List>
                    </ui:SendMail.Files>
                    <ui:SendMail.From>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_267">strEmailSendOnBehalf_123</CSharpValue>
                      </InArgument>
                    </ui:SendMail.From>
                    <ui:SendMail.Name>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_266">strEmailDisplayName_12</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Name>
                    <ui:SendMail.Port>
                      <InArgument x:TypeArguments="x:Int32">
                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_265">intEmailPort_1</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Port>
                    <ui:SendMail.SecurePassword>
                      <InArgument x:TypeArguments="ss:SecureString">
                        <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_263">sstrPass</CSharpValue>
                      </InArgument>
                    </ui:SendMail.SecurePassword>
                    <ui:SendMail.Server>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_264">strEmailServer_12</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Server>
                    <ui:SendMail.Subject>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_270">strEmailSubject</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Subject>
                    <ui:SendMail.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32">
                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_272">intSendEmailTOms</CSharpValue>
                      </InArgument>
                    </ui:SendMail.TimeoutMS>
                    <ui:SendMail.To>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_268">strEmailTO</CSharpValue>
                      </InArgument>
                    </ui:SendMail.To>
                  </ui:SendMail>
                </If.Else>
              </If>
              <If x:Key="2" sap2010:Annotation.AnnotationText="Is E-mail Body in HTML?" DisplayName="If - boolIsBodyHTML - SMTP - 2" sap:VirtualizedContainerService.HintSize="416,56" sap2010:WorkflowViewState.IdRef="If_9">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">boolIsBodyHTML</CSharpValue>
                  </InArgument>
                </If.Condition>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <ui:SendMail Bcc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" ReplyTo="{x:Null}" Result="{x:Null}" UseOAuth="{x:Null}" DisplayName="Send SMTP Mail Message - HTML - 2" EnableSSL="True" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendMail_11" IgnoreCRL="False" IsBodyHtml="True" SecureConnection="Auto">
                    <ui:SendMail.AttachmentsCollection>
                      <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
                        <CSharpValue x:TypeArguments="scg:IEnumerable(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_285">listAttachmentList</CSharpValue>
                      </InArgument>
                    </ui:SendMail.AttachmentsCollection>
                    <ui:SendMail.Body>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_283">strEmailBody</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Body>
                    <ui:SendMail.Cc>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_281">strEmailCC</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Cc>
                    <ui:SendMail.Email>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_274">strLogin</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Email>
                    <ui:SendMail.Files>
                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                    </ui:SendMail.Files>
                    <ui:SendMail.From>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_279">strEmailSendOnBehalf_123</CSharpValue>
                      </InArgument>
                    </ui:SendMail.From>
                    <ui:SendMail.Name>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_278">strEmailDisplayName_12</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Name>
                    <ui:SendMail.Port>
                      <InArgument x:TypeArguments="x:Int32">
                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_277">intEmailPort_1</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Port>
                    <ui:SendMail.SecurePassword>
                      <InArgument x:TypeArguments="ss:SecureString">
                        <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_275">sstrPass</CSharpValue>
                      </InArgument>
                    </ui:SendMail.SecurePassword>
                    <ui:SendMail.Server>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_276">strEmailServer_12</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Server>
                    <ui:SendMail.Subject>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_282">strEmailSubject</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Subject>
                    <ui:SendMail.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32">
                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_284">intSendEmailTOms</CSharpValue>
                      </InArgument>
                    </ui:SendMail.TimeoutMS>
                    <ui:SendMail.To>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_280">strEmailTO</CSharpValue>
                      </InArgument>
                    </ui:SendMail.To>
                  </ui:SendMail>
                </If.Then>
                <If.Else>
                  <ui:SendMail Bcc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" ReplyTo="{x:Null}" Result="{x:Null}" UseOAuth="{x:Null}" DisplayName="Send SMTP Mail Message - Not HTML - 2" EnableSSL="True" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendMail_12" IgnoreCRL="False" IsBodyHtml="False" SecureConnection="Auto">
                    <ui:SendMail.AttachmentsCollection>
                      <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
                        <CSharpValue x:TypeArguments="scg:IEnumerable(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_297">listAttachmentList</CSharpValue>
                      </InArgument>
                    </ui:SendMail.AttachmentsCollection>
                    <ui:SendMail.Body>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_295">strEmailBody</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Body>
                    <ui:SendMail.Cc>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_293">strEmailCC</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Cc>
                    <ui:SendMail.Email>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_286">strLogin</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Email>
                    <ui:SendMail.Files>
                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                    </ui:SendMail.Files>
                    <ui:SendMail.From>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_291">strEmailSendOnBehalf_123</CSharpValue>
                      </InArgument>
                    </ui:SendMail.From>
                    <ui:SendMail.Name>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_290">strEmailDisplayName_12</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Name>
                    <ui:SendMail.Port>
                      <InArgument x:TypeArguments="x:Int32">
                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_289">intEmailPort_1</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Port>
                    <ui:SendMail.SecurePassword>
                      <InArgument x:TypeArguments="ss:SecureString">
                        <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_287">sstrPass</CSharpValue>
                      </InArgument>
                    </ui:SendMail.SecurePassword>
                    <ui:SendMail.Server>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_288">strEmailServer_12</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Server>
                    <ui:SendMail.Subject>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_294">strEmailSubject</CSharpValue>
                      </InArgument>
                    </ui:SendMail.Subject>
                    <ui:SendMail.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32">
                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_296">intSendEmailTOms</CSharpValue>
                      </InArgument>
                    </ui:SendMail.TimeoutMS>
                    <ui:SendMail.To>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_292">strEmailTO</CSharpValue>
                      </InArgument>
                    </ui:SendMail.To>
                  </ui:SendMail>
                </If.Else>
              </If>
            </Switch>
            <Switch x:TypeArguments="x:Int32" x:Key="2" sap2010:Annotation.AnnotationText="Choose number of attachments." DisplayName="Switch&lt;Int32&gt; - intNoAttach_0_Path_1_List_2 - Exchange" sap:VirtualizedContainerService.HintSize="334.4,68.8" sap2010:WorkflowViewState.IdRef="Switch`1_3">
              <Switch.Default>
                <Sequence DisplayName="Default" sap:VirtualizedContainerService.HintSize="416,89.6" sap2010:WorkflowViewState.IdRef="Sequence_14">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </Sequence>
              </Switch.Default>
              <Switch.Expression>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">intNoAttach_0_Path_1_List_2</CSharpValue>
                </InArgument>
              </Switch.Expression>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If x:Key="0" sap2010:Annotation.AnnotationText="Is E-mail Body in HTML?" DisplayName="If - boolIsBodyHTML - Exchange - 0" sap:VirtualizedContainerService.HintSize="416,56" sap2010:WorkflowViewState.IdRef="If_10">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_25">boolIsBodyHTML</CSharpValue>
                  </InArgument>
                </If.Condition>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <If sap2010:Annotation.AnnotationText="Save an E-mail copy?" DisplayName="If - boolSaveCopyInSentItems_2 - boolIsBodyHTML - Exchange - 0" sap:VirtualizedContainerService.HintSize="332.8,56" sap2010:WorkflowViewState.IdRef="If_16">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_422">boolSaveCopyInSentItems_2</CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416.8,229.6" sap2010:WorkflowViewState.IdRef="Sequence_15">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:SendExchangeMail ApplicationId="{x:Null}" Bcc="{x:Null}" DirectoryId="{x:Null}" EmailAutodiscover="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" AuthenticationMode="UserNameAndPassword" DisplayName="Send Exchange Mail Message - Save Copy HTML - 0" ExchangeVersion="Exchange2007_SP1" sap:VirtualizedContainerService.HintSize="383.2,169.6" sap2010:WorkflowViewState.IdRef="SendExchangeMail_13" IsBodyHtml="True" IsDraft="False" SaveCopy="True">
                          <ui:SendExchangeMail.Body>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_426">strEmailBody</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Body>
                          <ui:SendExchangeMail.Cc>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_424">strEmailCC</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Cc>
                          <ui:SendExchangeMail.Domain>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_432">strEmailDomain_2</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Domain>
                          <ui:SendExchangeMail.From>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_428">strEmailSendOnBehalf_123</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.From>
                          <ui:SendExchangeMail.Name>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_427">strEmailDisplayName_12</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Name>
                          <ui:SendExchangeMail.SecurePassword>
                            <InArgument x:TypeArguments="ss:SecureString">
                              <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_431">sstrPass</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.SecurePassword>
                          <ui:SendExchangeMail.Server>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_429">strEmailServer_12</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Server>
                          <ui:SendExchangeMail.Subject>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_425">strEmailSubject</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Subject>
                          <ui:SendExchangeMail.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32">
                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_433">intSendEmailTOms</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.TimeoutMS>
                          <ui:SendExchangeMail.To>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_423">strEmailTO</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.To>
                          <ui:SendExchangeMail.User>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_430">strLogin</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.User>
                        </ui:SendExchangeMail>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416.8,229.6" sap2010:WorkflowViewState.IdRef="Sequence_16">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:SendExchangeMail ApplicationId="{x:Null}" Bcc="{x:Null}" DirectoryId="{x:Null}" EmailAutodiscover="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" AuthenticationMode="UserNameAndPassword" DisplayName="Send Exchange Mail Message - HTML - 0" ExchangeVersion="Exchange2007_SP1" sap:VirtualizedContainerService.HintSize="383.2,169.6" sap2010:WorkflowViewState.IdRef="SendExchangeMail_14" IsBodyHtml="True" IsDraft="False" SaveCopy="False">
                          <ui:SendExchangeMail.Body>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_437">strEmailBody</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Body>
                          <ui:SendExchangeMail.Cc>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_435">strEmailCC</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Cc>
                          <ui:SendExchangeMail.Domain>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_443">strEmailDomain_2</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Domain>
                          <ui:SendExchangeMail.From>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_439">strEmailSendOnBehalf_123</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.From>
                          <ui:SendExchangeMail.Name>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_438">strEmailDisplayName_12</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Name>
                          <ui:SendExchangeMail.SecurePassword>
                            <InArgument x:TypeArguments="ss:SecureString">
                              <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_442">sstrPass</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.SecurePassword>
                          <ui:SendExchangeMail.Server>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_440">strEmailServer_12</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Server>
                          <ui:SendExchangeMail.Subject>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_436">strEmailSubject</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Subject>
                          <ui:SendExchangeMail.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32">
                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_444">intSendEmailTOms</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.TimeoutMS>
                          <ui:SendExchangeMail.To>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_434">strEmailTO</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.To>
                          <ui:SendExchangeMail.User>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_441">strLogin</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.User>
                        </ui:SendExchangeMail>
                      </Sequence>
                    </If.Else>
                  </If>
                </If.Then>
                <If.Else>
                  <If sap2010:Annotation.AnnotationText="Save an E-mail copy?" DisplayName="If - boolSaveCopyInSentItems_2 - not boolIsBodyHTML - Exchange - 0" sap:VirtualizedContainerService.HintSize="332.8,56" sap2010:WorkflowViewState.IdRef="If_17">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_445">boolSaveCopyInSentItems_2</CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="419.2,229.6" sap2010:WorkflowViewState.IdRef="Sequence_17">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:SendExchangeMail ApplicationId="{x:Null}" Bcc="{x:Null}" DirectoryId="{x:Null}" EmailAutodiscover="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" AuthenticationMode="UserNameAndPassword" DisplayName="Send Exchange Mail Message - Save Copy Not HTML - 0" ExchangeVersion="Exchange2007_SP1" sap:VirtualizedContainerService.HintSize="385.6,169.6" sap2010:WorkflowViewState.IdRef="SendExchangeMail_15" IsBodyHtml="False" IsDraft="False" SaveCopy="True">
                          <ui:SendExchangeMail.Body>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_449">strEmailBody</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Body>
                          <ui:SendExchangeMail.Cc>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_447">strEmailCC</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Cc>
                          <ui:SendExchangeMail.Domain>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_455">strEmailDomain_2</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Domain>
                          <ui:SendExchangeMail.From>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_451">strEmailSendOnBehalf_123</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.From>
                          <ui:SendExchangeMail.Name>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_450">strEmailDisplayName_12</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Name>
                          <ui:SendExchangeMail.SecurePassword>
                            <InArgument x:TypeArguments="ss:SecureString">
                              <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_454">sstrPass</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.SecurePassword>
                          <ui:SendExchangeMail.Server>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_452">strEmailServer_12</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Server>
                          <ui:SendExchangeMail.Subject>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_448">strEmailSubject</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Subject>
                          <ui:SendExchangeMail.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32">
                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_456">intSendEmailTOms</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.TimeoutMS>
                          <ui:SendExchangeMail.To>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_446">strEmailTO</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.To>
                          <ui:SendExchangeMail.User>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_453">strLogin</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.User>
                        </ui:SendExchangeMail>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="419.2,229.6" sap2010:WorkflowViewState.IdRef="Sequence_18">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:SendExchangeMail ApplicationId="{x:Null}" Bcc="{x:Null}" DirectoryId="{x:Null}" EmailAutodiscover="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" AuthenticationMode="UserNameAndPassword" DisplayName="Send Exchange Mail Message - Not HTML - 0" ExchangeVersion="Exchange2007_SP1" sap:VirtualizedContainerService.HintSize="385.6,169.6" sap2010:WorkflowViewState.IdRef="SendExchangeMail_16" IsBodyHtml="False" IsDraft="False" SaveCopy="False">
                          <ui:SendExchangeMail.Body>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_460">strEmailBody</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Body>
                          <ui:SendExchangeMail.Cc>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_458">strEmailCC</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Cc>
                          <ui:SendExchangeMail.Domain>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_466">strEmailDomain_2</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Domain>
                          <ui:SendExchangeMail.From>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_462">strEmailSendOnBehalf_123</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.From>
                          <ui:SendExchangeMail.Name>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_461">strEmailDisplayName_12</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Name>
                          <ui:SendExchangeMail.SecurePassword>
                            <InArgument x:TypeArguments="ss:SecureString">
                              <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_465">sstrPass</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.SecurePassword>
                          <ui:SendExchangeMail.Server>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_463">strEmailServer_12</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Server>
                          <ui:SendExchangeMail.Subject>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_459">strEmailSubject</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Subject>
                          <ui:SendExchangeMail.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32">
                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_467">intSendEmailTOms</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.TimeoutMS>
                          <ui:SendExchangeMail.To>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_457">strEmailTO</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.To>
                          <ui:SendExchangeMail.User>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_464">strLogin</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.User>
                        </ui:SendExchangeMail>
                      </Sequence>
                    </If.Else>
                  </If>
                </If.Else>
              </If>
              <If x:Key="1" sap2010:Annotation.AnnotationText="Is E-mail Body in HTML?" DisplayName="If - boolIsBodyHTML - Exchange - 1" sap:VirtualizedContainerService.HintSize="416,56" sap2010:WorkflowViewState.IdRef="If_11">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_26">boolIsBodyHTML</CSharpValue>
                  </InArgument>
                </If.Condition>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <If sap2010:Annotation.AnnotationText="Save an E-mail copy?" DisplayName="If - boolSaveCopyInSentItems_2 - boolIsBodyHTML - Exchange - 1" sap:VirtualizedContainerService.HintSize="332.8,56" sap2010:WorkflowViewState.IdRef="If_18">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_468">boolSaveCopyInSentItems_2</CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416.8,229.6" sap2010:WorkflowViewState.IdRef="Sequence_19">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:SendExchangeMail ApplicationId="{x:Null}" Bcc="{x:Null}" DirectoryId="{x:Null}" EmailAutodiscover="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" AuthenticationMode="UserNameAndPassword" DisplayName="Send Exchange Mail Message - Save Copy HTML - 1" ExchangeVersion="Exchange2007_SP1" sap:VirtualizedContainerService.HintSize="383.2,169.6" sap2010:WorkflowViewState.IdRef="SendExchangeMail_17" IsBodyHtml="True" IsDraft="False" SaveCopy="True">
                          <ui:SendExchangeMail.Body>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_472">strEmailBody</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Body>
                          <ui:SendExchangeMail.Cc>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_470">strEmailCC</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Cc>
                          <ui:SendExchangeMail.Domain>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_479">strEmailDomain_2</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Domain>
                          <ui:SendExchangeMail.Files>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_475">strAttachmentPath</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Files>
                          <ui:SendExchangeMail.From>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_474">strEmailSendOnBehalf_123</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.From>
                          <ui:SendExchangeMail.Name>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_473">strEmailDisplayName_12</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Name>
                          <ui:SendExchangeMail.SecurePassword>
                            <InArgument x:TypeArguments="ss:SecureString">
                              <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_478">sstrPass</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.SecurePassword>
                          <ui:SendExchangeMail.Server>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_476">strEmailServer_12</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Server>
                          <ui:SendExchangeMail.Subject>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_471">strEmailSubject</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Subject>
                          <ui:SendExchangeMail.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32">
                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_480">intSendEmailTOms</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.TimeoutMS>
                          <ui:SendExchangeMail.To>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_469">strEmailTO</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.To>
                          <ui:SendExchangeMail.User>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_477">strLogin</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.User>
                        </ui:SendExchangeMail>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416.8,229.6" sap2010:WorkflowViewState.IdRef="Sequence_20">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:SendExchangeMail ApplicationId="{x:Null}" Bcc="{x:Null}" DirectoryId="{x:Null}" EmailAutodiscover="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" AuthenticationMode="UserNameAndPassword" DisplayName="Send Exchange Mail Message - HTML - 1" ExchangeVersion="Exchange2007_SP1" sap:VirtualizedContainerService.HintSize="383.2,169.6" sap2010:WorkflowViewState.IdRef="SendExchangeMail_18" IsBodyHtml="True" IsDraft="False" SaveCopy="False">
                          <ui:SendExchangeMail.Body>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_484">strEmailBody</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Body>
                          <ui:SendExchangeMail.Cc>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_482">strEmailCC</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Cc>
                          <ui:SendExchangeMail.Domain>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_491">strEmailDomain_2</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Domain>
                          <ui:SendExchangeMail.Files>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_487">strAttachmentPath</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Files>
                          <ui:SendExchangeMail.From>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_486">strEmailSendOnBehalf_123</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.From>
                          <ui:SendExchangeMail.Name>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_485">strEmailDisplayName_12</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Name>
                          <ui:SendExchangeMail.SecurePassword>
                            <InArgument x:TypeArguments="ss:SecureString">
                              <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_490">sstrPass</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.SecurePassword>
                          <ui:SendExchangeMail.Server>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_488">strEmailServer_12</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Server>
                          <ui:SendExchangeMail.Subject>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_483">strEmailSubject</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Subject>
                          <ui:SendExchangeMail.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32">
                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_492">intSendEmailTOms</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.TimeoutMS>
                          <ui:SendExchangeMail.To>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_481">strEmailTO</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.To>
                          <ui:SendExchangeMail.User>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_489">strLogin</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.User>
                        </ui:SendExchangeMail>
                      </Sequence>
                    </If.Else>
                  </If>
                </If.Then>
                <If.Else>
                  <If sap2010:Annotation.AnnotationText="Save an E-mail copy?" DisplayName="If - boolSaveCopyInSentItems_2 - not boolIsBodyHTML - Exchange - 1" sap:VirtualizedContainerService.HintSize="332.8,56" sap2010:WorkflowViewState.IdRef="If_19">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_493">boolSaveCopyInSentItems_2</CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="419.2,229.6" sap2010:WorkflowViewState.IdRef="Sequence_21">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:SendExchangeMail ApplicationId="{x:Null}" Bcc="{x:Null}" DirectoryId="{x:Null}" EmailAutodiscover="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" AuthenticationMode="UserNameAndPassword" DisplayName="Send Exchange Mail Message - Save Copy Not HTML - 1" ExchangeVersion="Exchange2007_SP1" sap:VirtualizedContainerService.HintSize="385.6,169.6" sap2010:WorkflowViewState.IdRef="SendExchangeMail_19" IsBodyHtml="False" IsDraft="False" SaveCopy="True">
                          <ui:SendExchangeMail.Body>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_497">strEmailBody</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Body>
                          <ui:SendExchangeMail.Cc>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_495">strEmailCC</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Cc>
                          <ui:SendExchangeMail.Domain>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_504">strEmailDomain_2</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Domain>
                          <ui:SendExchangeMail.Files>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_500">strAttachmentPath</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Files>
                          <ui:SendExchangeMail.From>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_499">strEmailSendOnBehalf_123</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.From>
                          <ui:SendExchangeMail.Name>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_498">strEmailDisplayName_12</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Name>
                          <ui:SendExchangeMail.SecurePassword>
                            <InArgument x:TypeArguments="ss:SecureString">
                              <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_503">sstrPass</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.SecurePassword>
                          <ui:SendExchangeMail.Server>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_501">strEmailServer_12</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Server>
                          <ui:SendExchangeMail.Subject>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_496">strEmailSubject</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Subject>
                          <ui:SendExchangeMail.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32">
                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_505">intSendEmailTOms</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.TimeoutMS>
                          <ui:SendExchangeMail.To>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_494">strEmailTO</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.To>
                          <ui:SendExchangeMail.User>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_502">strLogin</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.User>
                        </ui:SendExchangeMail>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="419.2,229.6" sap2010:WorkflowViewState.IdRef="Sequence_22">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:SendExchangeMail ApplicationId="{x:Null}" Bcc="{x:Null}" DirectoryId="{x:Null}" EmailAutodiscover="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" AuthenticationMode="UserNameAndPassword" DisplayName="Send Exchange Mail Message - Not HTML - 1" ExchangeVersion="Exchange2007_SP1" sap:VirtualizedContainerService.HintSize="385.6,169.6" sap2010:WorkflowViewState.IdRef="SendExchangeMail_20" IsBodyHtml="False" IsDraft="False" SaveCopy="False">
                          <ui:SendExchangeMail.Body>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_509">strEmailBody</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Body>
                          <ui:SendExchangeMail.Cc>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_507">strEmailCC</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Cc>
                          <ui:SendExchangeMail.Domain>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_516">strEmailDomain_2</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Domain>
                          <ui:SendExchangeMail.Files>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_512">strAttachmentPath</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Files>
                          <ui:SendExchangeMail.From>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_511">strEmailSendOnBehalf_123</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.From>
                          <ui:SendExchangeMail.Name>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_510">strEmailDisplayName_12</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Name>
                          <ui:SendExchangeMail.SecurePassword>
                            <InArgument x:TypeArguments="ss:SecureString">
                              <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_515">sstrPass</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.SecurePassword>
                          <ui:SendExchangeMail.Server>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_513">strEmailServer_12</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Server>
                          <ui:SendExchangeMail.Subject>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_508">strEmailSubject</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Subject>
                          <ui:SendExchangeMail.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32">
                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_517">intSendEmailTOms</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.TimeoutMS>
                          <ui:SendExchangeMail.To>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_506">strEmailTO</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.To>
                          <ui:SendExchangeMail.User>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_514">strLogin</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.User>
                        </ui:SendExchangeMail>
                      </Sequence>
                    </If.Else>
                  </If>
                </If.Else>
              </If>
              <If x:Key="2" sap2010:Annotation.AnnotationText="Is E-mail Body in HTML?" DisplayName="If - boolIsBodyHTML - Exchange - 2" sap:VirtualizedContainerService.HintSize="416,56" sap2010:WorkflowViewState.IdRef="If_12">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_27">boolIsBodyHTML</CSharpValue>
                  </InArgument>
                </If.Condition>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <If sap2010:Annotation.AnnotationText="Save an E-mail copy?" DisplayName="If - boolSaveCopyInSentItems_2 - boolIsBodyHTML - Exchange - 2" sap:VirtualizedContainerService.HintSize="332.8,56" sap2010:WorkflowViewState.IdRef="If_20">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_518">boolSaveCopyInSentItems_2</CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416.8,229.6" sap2010:WorkflowViewState.IdRef="Sequence_23">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:SendExchangeMail ApplicationId="{x:Null}" Bcc="{x:Null}" DirectoryId="{x:Null}" EmailAutodiscover="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" AuthenticationMode="UserNameAndPassword" DisplayName="Send Exchange Mail Message - Save Copy HTML - 2" ExchangeVersion="Exchange2007_SP1" sap:VirtualizedContainerService.HintSize="383.2,169.6" sap2010:WorkflowViewState.IdRef="SendExchangeMail_21" IsBodyHtml="True" IsDraft="False" SaveCopy="True">
                          <ui:SendExchangeMail.AttachmentsCollection>
                            <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
                              <CSharpValue x:TypeArguments="scg:IEnumerable(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_525">listAttachmentList</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.AttachmentsCollection>
                          <ui:SendExchangeMail.Body>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_522">strEmailBody</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Body>
                          <ui:SendExchangeMail.Cc>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_520">strEmailCC</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Cc>
                          <ui:SendExchangeMail.Domain>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_529">strEmailDomain_2</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Domain>
                          <ui:SendExchangeMail.From>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_524">strEmailSendOnBehalf_123</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.From>
                          <ui:SendExchangeMail.Name>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_523">strEmailDisplayName_12</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Name>
                          <ui:SendExchangeMail.SecurePassword>
                            <InArgument x:TypeArguments="ss:SecureString">
                              <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_528">sstrPass</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.SecurePassword>
                          <ui:SendExchangeMail.Server>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_526">strEmailServer_12</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Server>
                          <ui:SendExchangeMail.Subject>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_521">strEmailSubject</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Subject>
                          <ui:SendExchangeMail.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32">
                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_530">intSendEmailTOms</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.TimeoutMS>
                          <ui:SendExchangeMail.To>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_519">strEmailTO</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.To>
                          <ui:SendExchangeMail.User>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_527">strLogin</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.User>
                        </ui:SendExchangeMail>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416.8,229.6" sap2010:WorkflowViewState.IdRef="Sequence_24">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:SendExchangeMail ApplicationId="{x:Null}" Bcc="{x:Null}" DirectoryId="{x:Null}" EmailAutodiscover="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" AuthenticationMode="UserNameAndPassword" DisplayName="Send Exchange Mail Message - HTML - 2" ExchangeVersion="Exchange2007_SP1" sap:VirtualizedContainerService.HintSize="383.2,169.6" sap2010:WorkflowViewState.IdRef="SendExchangeMail_22" IsBodyHtml="True" IsDraft="False" SaveCopy="False">
                          <ui:SendExchangeMail.AttachmentsCollection>
                            <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
                              <CSharpValue x:TypeArguments="scg:IEnumerable(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_537">listAttachmentList</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.AttachmentsCollection>
                          <ui:SendExchangeMail.Body>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_534">strEmailBody</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Body>
                          <ui:SendExchangeMail.Cc>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_532">strEmailCC</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Cc>
                          <ui:SendExchangeMail.Domain>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_541">strEmailDomain_2</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Domain>
                          <ui:SendExchangeMail.From>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_536">strEmailSendOnBehalf_123</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.From>
                          <ui:SendExchangeMail.Name>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_535">strEmailDisplayName_12</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Name>
                          <ui:SendExchangeMail.SecurePassword>
                            <InArgument x:TypeArguments="ss:SecureString">
                              <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_540">sstrPass</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.SecurePassword>
                          <ui:SendExchangeMail.Server>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_538">strEmailServer_12</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Server>
                          <ui:SendExchangeMail.Subject>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_533">strEmailSubject</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Subject>
                          <ui:SendExchangeMail.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32">
                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_542">intSendEmailTOms</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.TimeoutMS>
                          <ui:SendExchangeMail.To>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_531">strEmailTO</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.To>
                          <ui:SendExchangeMail.User>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_539">strLogin</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.User>
                        </ui:SendExchangeMail>
                      </Sequence>
                    </If.Else>
                  </If>
                </If.Then>
                <If.Else>
                  <If sap2010:Annotation.AnnotationText="Save an E-mail copy?" DisplayName="If - boolSaveCopyInSentItems_2 - not boolIsBodyHTML - Exchange - 2" sap:VirtualizedContainerService.HintSize="332.8,56" sap2010:WorkflowViewState.IdRef="If_21">
                    <If.Condition>
                      <InArgument x:TypeArguments="x:Boolean">
                        <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_543">boolSaveCopyInSentItems_2</CSharpValue>
                      </InArgument>
                    </If.Condition>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <If.Then>
                      <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="419.2,229.6" sap2010:WorkflowViewState.IdRef="Sequence_25">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:SendExchangeMail ApplicationId="{x:Null}" Bcc="{x:Null}" DirectoryId="{x:Null}" EmailAutodiscover="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" AuthenticationMode="UserNameAndPassword" DisplayName="Send Exchange Mail Message - Save Copy Not HTML - 2" ExchangeVersion="Exchange2007_SP1" sap:VirtualizedContainerService.HintSize="385.6,169.6" sap2010:WorkflowViewState.IdRef="SendExchangeMail_23" IsBodyHtml="False" IsDraft="False" SaveCopy="True">
                          <ui:SendExchangeMail.AttachmentsCollection>
                            <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
                              <CSharpValue x:TypeArguments="scg:IEnumerable(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_550">listAttachmentList</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.AttachmentsCollection>
                          <ui:SendExchangeMail.Body>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_547">strEmailBody</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Body>
                          <ui:SendExchangeMail.Cc>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_545">strEmailCC</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Cc>
                          <ui:SendExchangeMail.Domain>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_554">strEmailDomain_2</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Domain>
                          <ui:SendExchangeMail.From>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_549">strEmailSendOnBehalf_123</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.From>
                          <ui:SendExchangeMail.Name>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_548">strEmailDisplayName_12</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Name>
                          <ui:SendExchangeMail.SecurePassword>
                            <InArgument x:TypeArguments="ss:SecureString">
                              <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_553">sstrPass</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.SecurePassword>
                          <ui:SendExchangeMail.Server>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_551">strEmailServer_12</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Server>
                          <ui:SendExchangeMail.Subject>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_546">strEmailSubject</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Subject>
                          <ui:SendExchangeMail.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32">
                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_555">intSendEmailTOms</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.TimeoutMS>
                          <ui:SendExchangeMail.To>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_544">strEmailTO</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.To>
                          <ui:SendExchangeMail.User>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_552">strLogin</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.User>
                        </ui:SendExchangeMail>
                      </Sequence>
                    </If.Then>
                    <If.Else>
                      <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="419.2,229.6" sap2010:WorkflowViewState.IdRef="Sequence_26">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:SendExchangeMail ApplicationId="{x:Null}" Bcc="{x:Null}" DirectoryId="{x:Null}" EmailAutodiscover="{x:Null}" MailMessage="{x:Null}" Password="{x:Null}" AuthenticationMode="UserNameAndPassword" DisplayName="Send Exchange Mail Message - Not HTML - 2" ExchangeVersion="Exchange2007_SP1" sap:VirtualizedContainerService.HintSize="385.6,169.6" sap2010:WorkflowViewState.IdRef="SendExchangeMail_24" IsBodyHtml="False" IsDraft="False" SaveCopy="False">
                          <ui:SendExchangeMail.AttachmentsCollection>
                            <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
                              <CSharpValue x:TypeArguments="scg:IEnumerable(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_562">listAttachmentList</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.AttachmentsCollection>
                          <ui:SendExchangeMail.Body>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_559">strEmailBody</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Body>
                          <ui:SendExchangeMail.Cc>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_557">strEmailCC</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Cc>
                          <ui:SendExchangeMail.Domain>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_566">strEmailDomain_2</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Domain>
                          <ui:SendExchangeMail.From>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_561">strEmailSendOnBehalf_123</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.From>
                          <ui:SendExchangeMail.Name>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_560">strEmailDisplayName_12</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Name>
                          <ui:SendExchangeMail.SecurePassword>
                            <InArgument x:TypeArguments="ss:SecureString">
                              <CSharpValue x:TypeArguments="ss:SecureString" sap2010:WorkflowViewState.IdRef="CSharpValue`1_565">sstrPass</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.SecurePassword>
                          <ui:SendExchangeMail.Server>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_563">strEmailServer_12</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Server>
                          <ui:SendExchangeMail.Subject>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_558">strEmailSubject</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.Subject>
                          <ui:SendExchangeMail.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32">
                              <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_567">intSendEmailTOms</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.TimeoutMS>
                          <ui:SendExchangeMail.To>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_556">strEmailTO</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.To>
                          <ui:SendExchangeMail.User>
                            <InArgument x:TypeArguments="x:String">
                              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_564">strLogin</CSharpValue>
                            </InArgument>
                          </ui:SendExchangeMail.User>
                        </ui:SendExchangeMail>
                      </Sequence>
                    </If.Else>
                  </If>
                </If.Else>
              </If>
            </Switch>
            <Switch x:TypeArguments="x:Int32" x:Key="3" sap2010:Annotation.AnnotationText="Choose number of attachments." DisplayName="Switch&lt;Int32&gt; - intNoAttach_0_Path_1_List_2 - OutlookApp" sap:VirtualizedContainerService.HintSize="334.4,68.8" sap2010:WorkflowViewState.IdRef="Switch`1_4">
              <Switch.Expression>
                <InArgument x:TypeArguments="x:Int32">
                  <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_28">intNoAttach_0_Path_1_List_2</CSharpValue>
                </InArgument>
              </Switch.Expression>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If x:Key="0" sap2010:Annotation.AnnotationText="Is E-mail Body in HTML?" DisplayName="If - boolIsBodyHTML - OutlookApp - 0" sap:VirtualizedContainerService.HintSize="200,56" sap2010:WorkflowViewState.IdRef="If_13">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">boolIsBodyHTML</CSharpValue>
                  </InArgument>
                </If.Condition>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <ui:SendOutlookMail Bcc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" DisplayName="Send Outlook Mail Message - HTML - 0" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendOutlookMail_7" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal">
                    <ui:SendOutlookMail.Account>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_368">strEmailAccount_3</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.Account>
                    <ui:SendOutlookMail.Body>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_373">strEmailBody</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.Body>
                    <ui:SendOutlookMail.Cc>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_371">strEmailCC</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.Cc>
                    <ui:SendOutlookMail.Files>
                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                    </ui:SendOutlookMail.Files>
                    <ui:SendOutlookMail.SentOnBehalfOfName>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_369">strEmailSendOnBehalf_123</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.SentOnBehalfOfName>
                    <ui:SendOutlookMail.Subject>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_372">strEmailSubject</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.Subject>
                    <ui:SendOutlookMail.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32">
                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_374">intSendEmailTOms</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.TimeoutMS>
                    <ui:SendOutlookMail.To>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_370">strEmailTO</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.To>
                  </ui:SendOutlookMail>
                </If.Then>
                <If.Else>
                  <ui:SendOutlookMail Bcc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" DisplayName="Send Outlook Mail Message - Not HTML - 0" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendOutlookMail_8" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal">
                    <ui:SendOutlookMail.Account>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_375">strEmailAccount_3</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.Account>
                    <ui:SendOutlookMail.Body>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_380">strEmailBody</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.Body>
                    <ui:SendOutlookMail.Cc>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_378">strEmailCC</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.Cc>
                    <ui:SendOutlookMail.Files>
                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                    </ui:SendOutlookMail.Files>
                    <ui:SendOutlookMail.SentOnBehalfOfName>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_376">strEmailSendOnBehalf_123</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.SentOnBehalfOfName>
                    <ui:SendOutlookMail.Subject>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_379">strEmailSubject</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.Subject>
                    <ui:SendOutlookMail.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32">
                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_381">intSendEmailTOms</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.TimeoutMS>
                    <ui:SendOutlookMail.To>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_377">strEmailTO</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.To>
                  </ui:SendOutlookMail>
                </If.Else>
              </If>
              <If x:Key="1" sap2010:Annotation.AnnotationText="Is E-mail Body in HTML?" DisplayName="If - boolIsBodyHTML - OutlookApp - 1" sap:VirtualizedContainerService.HintSize="200,56" sap2010:WorkflowViewState.IdRef="If_14">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_30">boolIsBodyHTML</CSharpValue>
                  </InArgument>
                </If.Condition>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <ui:SendOutlookMail Bcc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" DisplayName="Send Outlook Mail Message - HTML - 1" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendOutlookMail_9" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal">
                    <ui:SendOutlookMail.Account>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_382">strEmailAccount_3</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.Account>
                    <ui:SendOutlookMail.Body>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_387">strEmailBody</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.Body>
                    <ui:SendOutlookMail.Cc>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_385">strEmailCC</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.Cc>
                    <ui:SendOutlookMail.Files>
                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_389">strAttachmentPath</CSharpValue>
                        </InArgument>
                      </scg:List>
                    </ui:SendOutlookMail.Files>
                    <ui:SendOutlookMail.SentOnBehalfOfName>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_383">strEmailSendOnBehalf_123</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.SentOnBehalfOfName>
                    <ui:SendOutlookMail.Subject>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_386">strEmailSubject</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.Subject>
                    <ui:SendOutlookMail.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32">
                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_388">intSendEmailTOms</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.TimeoutMS>
                    <ui:SendOutlookMail.To>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_384">strEmailTO</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.To>
                  </ui:SendOutlookMail>
                </If.Then>
                <If.Else>
                  <ui:SendOutlookMail Bcc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" DisplayName="Send Outlook Mail Message - Not HTML - 1" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendOutlookMail_10" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal">
                    <ui:SendOutlookMail.Account>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_390">strEmailAccount_3</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.Account>
                    <ui:SendOutlookMail.Body>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_395">strEmailBody</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.Body>
                    <ui:SendOutlookMail.Cc>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_393">strEmailCC</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.Cc>
                    <ui:SendOutlookMail.Files>
                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4">
                        <InArgument x:TypeArguments="x:String">
                          <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_397">strAttachmentPath</CSharpValue>
                        </InArgument>
                      </scg:List>
                    </ui:SendOutlookMail.Files>
                    <ui:SendOutlookMail.SentOnBehalfOfName>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_391">strEmailSendOnBehalf_123</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.SentOnBehalfOfName>
                    <ui:SendOutlookMail.Subject>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_394">strEmailSubject</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.Subject>
                    <ui:SendOutlookMail.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32">
                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_396">intSendEmailTOms</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.TimeoutMS>
                    <ui:SendOutlookMail.To>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_392">strEmailTO</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.To>
                  </ui:SendOutlookMail>
                </If.Else>
              </If>
              <If x:Key="2" sap2010:Annotation.AnnotationText="Is E-mail Body in HTML?" DisplayName="If - boolIsBodyHTML - OutlookApp - 2" sap:VirtualizedContainerService.HintSize="200,56" sap2010:WorkflowViewState.IdRef="If_15">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <CSharpValue x:TypeArguments="x:Boolean" sap2010:WorkflowViewState.IdRef="CSharpValue`1_31">boolIsBodyHTML</CSharpValue>
                  </InArgument>
                </If.Condition>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <ui:SendOutlookMail Bcc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" DisplayName="Send Outlook Mail Message - HTML - 2" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendOutlookMail_11" Importance="Normal" IsBodyHtml="True" IsDraft="False" Sensitivity="Normal">
                    <ui:SendOutlookMail.Account>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_398">strEmailAccount_3</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.Account>
                    <ui:SendOutlookMail.AttachmentsCollection>
                      <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
                        <CSharpValue x:TypeArguments="scg:IEnumerable(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_405">listAttachmentList</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.AttachmentsCollection>
                    <ui:SendOutlookMail.Body>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_403">strEmailBody</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.Body>
                    <ui:SendOutlookMail.Cc>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_401">strEmailCC</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.Cc>
                    <ui:SendOutlookMail.Files>
                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                    </ui:SendOutlookMail.Files>
                    <ui:SendOutlookMail.SentOnBehalfOfName>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_399">strEmailSendOnBehalf_123</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.SentOnBehalfOfName>
                    <ui:SendOutlookMail.Subject>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_402">strEmailSubject</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.Subject>
                    <ui:SendOutlookMail.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32">
                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_404">intSendEmailTOms</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.TimeoutMS>
                    <ui:SendOutlookMail.To>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_400">strEmailTO</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.To>
                  </ui:SendOutlookMail>
                </If.Then>
                <If.Else>
                  <ui:SendOutlookMail Bcc="{x:Null}" ContinueOnError="{x:Null}" MailMessage="{x:Null}" ReplyTo="{x:Null}" DisplayName="Send Outlook Mail Message - Not HTML - 2" sap:VirtualizedContainerService.HintSize="333.6,146.4" sap2010:WorkflowViewState.IdRef="SendOutlookMail_12" Importance="Normal" IsBodyHtml="False" IsDraft="False" Sensitivity="Normal">
                    <ui:SendOutlookMail.Account>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_406">strEmailAccount_3</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.Account>
                    <ui:SendOutlookMail.AttachmentsCollection>
                      <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
                        <CSharpValue x:TypeArguments="scg:IEnumerable(x:String)" sap2010:WorkflowViewState.IdRef="CSharpValue`1_413">listAttachmentList</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.AttachmentsCollection>
                    <ui:SendOutlookMail.Body>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_411">strEmailBody</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.Body>
                    <ui:SendOutlookMail.Cc>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_409">strEmailCC</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.Cc>
                    <ui:SendOutlookMail.Files>
                      <scg:List x:TypeArguments="InArgument(x:String)" Capacity="4" />
                    </ui:SendOutlookMail.Files>
                    <ui:SendOutlookMail.SentOnBehalfOfName>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_407">strEmailSendOnBehalf_123</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.SentOnBehalfOfName>
                    <ui:SendOutlookMail.Subject>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_410">strEmailSubject</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.Subject>
                    <ui:SendOutlookMail.TimeoutMS>
                      <InArgument x:TypeArguments="x:Int32">
                        <CSharpValue x:TypeArguments="x:Int32" sap2010:WorkflowViewState.IdRef="CSharpValue`1_412">intSendEmailTOms</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.TimeoutMS>
                    <ui:SendOutlookMail.To>
                      <InArgument x:TypeArguments="x:String">
                        <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_408">strEmailTO</CSharpValue>
                      </InArgument>
                    </ui:SendOutlookMail.To>
                  </ui:SendOutlookMail>
                </If.Else>
              </If>
            </Switch>
          </Switch>
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean" />
      </ui:RetryScope.Condition>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:RetryScope>
    <Delay DisplayName="Delay - tsDelAfterSend" sap:VirtualizedContainerService.HintSize="449.6,122.4" sap2010:WorkflowViewState.IdRef="Delay_1">
      <InArgument x:TypeArguments="x:TimeSpan">
        <CSharpValue x:TypeArguments="x:TimeSpan" sap2010:WorkflowViewState.IdRef="CSharpValue`1_414">tsDelAfterSend</CSharpValue>
      </InArgument>
    </Delay>
    <ui:LogMessage DisplayName="Log Message - 99" sap:VirtualizedContainerService.HintSize="449.6,165.6" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace">
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_223">"Stop - Outlook Send Email"</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
  </Sequence>
</Activity>